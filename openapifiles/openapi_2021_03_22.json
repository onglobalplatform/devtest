{
  "paths": {
    "/api/unrealisedcgt": {
      "get": {
        "responses": {
          "200": {
            "description": "Unrealised CGT",
            "schema": {
              "$ref": "#/definitions/UnrealisedCgtParcelIEnumerablePagedResponse"
            }
          }
        },
        "operationId": "GetAUUnrealisedCgt",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "Page number to return. Default to 1.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "description": "Page size to return.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/unrealisedcgtsummary": {
      "get": {
        "responses": {
          "200": {
            "description": "Unrealised CGT Summary",
            "schema": {
              "$ref": "#/definitions/UnrealisedCgtSummary"
            }
          }
        },
        "operationId": "GetAUUnrealisedCgtSummary",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/transactions": {
      "get": {
        "responses": {
          "200": {
            "description": "Transactions",
            "schema": {
              "$ref": "#/definitions/TransactionIEnumerablePagedResponse"
            }
          }
        },
        "operationId": "GetAUTransactions",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          },
          {
            "name": "AccountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "FromDate",
            "in": "query",
            "required": true,
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "ToDate",
            "in": "query",
            "required": true,
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "BuysAndSellsOnly",
            "in": "query",
            "required": false,
            "description": "",
            "type": "boolean"
          },
          {
            "name": "ShowUnconfirmed",
            "in": "query",
            "required": false,
            "description": "",
            "type": "boolean"
          },
          {
            "name": "Page",
            "in": "query",
            "required": false,
            "description": "Page number to return. Default to 1.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "Size",
            "in": "query",
            "required": false,
            "description": "Page size to return.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "OrderBy",
            "in": "query",
            "required": false,
            "description": "TransactionDate = 0, Security = 1.",
            "type": "enum"
          },
          {
            "name": "Order",
            "in": "query",
            "required": false,
            "description": "Asc = 0, Desc = 1.",
            "type": "enum"
          }
        ]
      }
    },
    "/api/cashtransactions": {
      "get": {
        "responses": {
          "200": {
            "description": "Cash transactions",
            "schema": {
              "$ref": "#/definitions/CashBookIEnumerablePagedResponse"
            }
          }
        },
        "operationId": "GetAUCashTransactions",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "IncludePendingUnsettled",
            "in": "query",
            "required": false,
            "description": "",
            "type": "boolean"
          },
          {
            "name": "Page",
            "in": "query",
            "required": false,
            "description": "Page number to return. Default to 1.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "Size",
            "in": "query",
            "required": false,
            "description": "Page size to return.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "AccountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "FromDate",
            "in": "query",
            "required": true,
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "ToDate",
            "in": "query",
            "required": true,
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/unsettledtransactions": {
      "get": {
        "responses": {
          "200": {
            "description": "Unsettled transactions",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UnsettledTransaction"
              }
            }
          }
        },
        "operationId": "GetAUUnsettledTransactions",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "required": false,
            "description": "Page number to return. Default to 1.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "Size",
            "in": "query",
            "required": false,
            "description": "Page size to return.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "AccountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "FromDate",
            "in": "query",
            "required": true,
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "ToDate",
            "in": "query",
            "required": true,
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/dividendreinvestmentdetails": {
      "get": {
        "responses": {
          "200": {
            "description": "Dividend reinvestment details",
            "schema": {
              "$ref": "#/definitions/DividendReinvestmentDetailIEnumerablePagedResponse"
            }
          }
        },
        "operationId": "GetAUDividendReinvestmentDetails",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/assetclasssummary": {
      "get": {
        "responses": {
          "200": {
            "description": "Asset class summary",
            "schema": {
              "$ref": "#/definitions/AssetClassSummary"
            }
          }
        },
        "operationId": "GetAUAssetClassSummary",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "AccountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "IncludeLoans",
            "in": "query",
            "required": false,
            "description": "",
            "type": "boolean"
          },
          {
            "name": "ValuationDate",
            "in": "query",
            "required": true,
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/holdingsbymodel": {
      "get": {
        "responses": {
          "200": {
            "description": "Holdings By Model",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HoldingsHistoryByModel"
              }
            }
          }
        },
        "operationId": "GetAUHoldingsByModel",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "AccountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "FromDate",
            "in": "query",
            "required": true,
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "ToDate",
            "in": "query",
            "required": true,
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/account/Sma": {
      "post": {
        "responses": {
          "200": {
            "description": "Account",
            "schema": {
              "$ref": "#/definitions/AccountCreationResponse"
            }
          }
        },
        "operationId": "CreateSMAAccount",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SMAAccountRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/account/SuperSmaAccumulation": {
      "post": {
        "responses": {
          "200": {
            "description": "Account",
            "schema": {
              "$ref": "#/definitions/AccountCreationResponse"
            }
          }
        },
        "operationId": "CreateSuperSmaAccumulationAccount",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SuperSmaAccumulationAccountRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/account/SuperSmaPension": {
      "post": {
        "responses": {
          "200": {
            "description": "Account",
            "schema": {
              "$ref": "#/definitions/AccountCreationResponse"
            }
          }
        },
        "operationId": "CreateSuperSmaPensionAccount",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SuperSmaPensionAccountRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/appform": {
      "get": {
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "operationId": "GetAUAppForm",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          },
          {
            "name": "AccountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "Recipient",
            "in": "query",
            "required": false,
            "description": "Adviser = 0, Investor = 1 (UK only)",
            "type": "enum"
          },
          {
            "name": "FormType",
            "in": "query",
            "required": false,
            "description": "Digital = 0, Paper = 1 (UK only)",
            "type": "enum"
          }
        ]
      }
    },
    "/api/accounts": {
      "get": {
        "responses": {
          "200": {
            "description": "Accounts",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountIEnumerablePagedResponse"
              }
            }
          }
        },
        "operationId": "GetAUAccounts",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": false,
            "description": "Account search string. This parameter accepts wildcards (*).",
            "type": "string"
          },
          {
            "name": "accountIds",
            "in": "query",
            "required": false,
            "description": "",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "Page number to return. Default to 1.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "description": "Page size to return. Default to 100 accounts per page.",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/childaccounts": {
      "get": {
        "responses": {
          "200": {
            "description": "Child accounts",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChildAccountAU"
              }
            }
          }
        },
        "operationId": "GetAUChildAccounts",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/accountmodelweightings": {
      "get": {
        "responses": {
          "200": {
            "description": "Account model weightings",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountModelWeighting"
              }
            }
          }
        },
        "operationId": "GetAccountModelWeightings",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "204": {
            "description": "Success"
          }
        },
        "operationId": "ReplaceAccountModelWeightings",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PutAccountModelWeightingRequest"
            }
          }
        ]
      }
    },
    "/api/pds": {
      "get": {
        "responses": {
          "200": {
            "description": "PDS",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PdsDetail"
              }
            }
          }
        },
        "operationId": "GetPDS",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/user/{username}": {
      "get": {
        "responses": {
          "200": {
            "description": "User",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "operationId": "GetUser",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "required": true,
            "description": "User name.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/cedingparties": {
      "get": {
        "responses": {
          "200": {
            "description": "Ceding Parties",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CedingPartyResponse"
              }
            }
          }
        },
        "operationId": "GetUKCedingParties",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          },
          {
            "name": "accountType",
            "in": "query",
            "required": false,
            "description": "Isa = 15, Gia = 16.",
            "type": "enum"
          },
          {
            "name": "search",
            "in": "query",
            "required": true,
            "description": "Search for Ceding party.",
            "type": "string"
          }
        ]
      }
    },
    "/api/securities": {
      "get": {
        "responses": {
          "200": {
            "description": "Securities",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SecurityResponse"
              }
            }
          }
        },
        "operationId": "FindAUSecurities",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "required": true,
            "description": "Search term based on security code or security description.",
            "type": "string"
          },
          {
            "name": "exchangeType",
            "in": "query",
            "required": false,
            "description": "Share = 1, Fund = 2.",
            "type": "enum"
          },
          {
            "name": "pdsId",
            "in": "query",
            "required": false,
            "description": "PDS ID.",
            "type": "string"
          },
          {
            "name": "allowInternational",
            "in": "query",
            "required": false,
            "description": "If allowed for International.",
            "type": "boolean"
          },
          {
            "name": "securityIds",
            "in": "query",
            "required": false,
            "description": "A list of security IDs to search.",
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        ]
      }
    },
    "/api/recalc/status": {
      "get": {
        "responses": {
          "200": {
            "description": "Service Recalc Status",
            "schema": {
              "$ref": "#/definitions/ServiceRecalcStatus"
            }
          }
        },
        "operationId": "GetAURecalcStatus",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/securityexclusions": {
      "get": {
        "responses": {
          "200": {
            "description": "Security exclusions",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SecurityExclusionResponse"
              }
            }
          }
        },
        "operationId": "GetAUSecurityExclusions",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "204": {
            "description": "Success"
          }
        },
        "operationId": "ReplaceAUSecurityExclusions",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SecurityExclusionRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "post": {
        "responses": {
          "204": {
            "description": "Success"
          }
        },
        "operationId": "AddAUSecurityExclusions",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SecurityExclusionRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Success"
          }
        },
        "operationId": "DeleteAUSecurityExclusions",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "securityId",
            "in": "query",
            "required": false,
            "description": "Security ID.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/securitysubstitutions": {
      "get": {
        "responses": {
          "200": {
            "description": "Security substitutions",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SecuritySubstitutionResponse"
              }
            }
          }
        },
        "operationId": "GetAUSecuritySubstitutions",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "put": {
        "responses": {
          "204": {
            "description": "Success"
          }
        },
        "operationId": "ReplaceAUSecuritySubstitutions",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SecuritySubstitutionRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "post": {
        "responses": {
          "204": {
            "description": "Success"
          }
        },
        "operationId": "AddAUSecuritySubstitutions",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SecuritySubstitutionRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "delete": {
        "responses": {
          "204": {
            "description": "Success"
          }
        },
        "operationId": "DeleteAUSecuritySubstitutions",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "fromSecurityId",
            "in": "query",
            "required": false,
            "description": "Security ID to substitute from.",
            "type": "string"
          },
          {
            "name": "toSecurityId",
            "in": "query",
            "required": false,
            "description": "Security ID to substitute to.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/minimumtradesize": {
      "get": {
        "responses": {
          "200": {
            "description": "Minimum trade size",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RebalanceTolerance"
              }
            }
          }
        },
        "operationId": "GetAUMinimumTradeSize",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      },
      "patch": {
        "responses": {
          "204": {
            "description": "Success"
          }
        },
        "operationId": "UpdateAUMinimumTradeSize",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PatchMinimumTradeSizeRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/application": {
      "post": {
        "responses": {
          "200": {
            "description": "Application upload result",
            "schema": {
              "$ref": "#/definitions/ApplicationUploadResult"
            }
          }
        },
        "operationId": "CreateDraftApplication",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/DraftApplication"
            }
          }
        ]
      }
    },
    "/api/application/{ApplicationId}/status": {
      "get": {
        "responses": {
          "200": {
            "description": "Application status",
            "schema": {
              "$ref": "#/definitions/ApplicationStatus"
            }
          }
        },
        "operationId": "GetDraftApplicationStatus",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "description": "Unique application ID to be used as an application reference.",
            "format": "uuid",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/expenses": {
      "get": {
        "responses": {
          "200": {
            "description": "Expenses",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Expense"
              }
            }
          }
        },
        "operationId": "GetAUExpenses",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "AccountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "FromDate",
            "in": "query",
            "required": true,
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "ToDate",
            "in": "query",
            "required": true,
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/incomeandtaxcredit": {
      "get": {
        "responses": {
          "200": {
            "description": "Income and tax credit",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IncomeAndTaxCredit"
              }
            }
          }
        },
        "operationId": "GetAUIncomeAndTaxCredit",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "AccountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "FromDate",
            "in": "query",
            "required": true,
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "ToDate",
            "in": "query",
            "required": true,
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/incomeschedules": {
      "get": {
        "responses": {
          "200": {
            "description": "Income schedules",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IncomeSchedule"
              }
            }
          }
        },
        "operationId": "GetAUIncomeSchedules",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "AccountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "FromDate",
            "in": "query",
            "required": true,
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "ToDate",
            "in": "query",
            "required": true,
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/assetclassperformance": {
      "get": {
        "responses": {
          "200": {
            "description": "Asset class performance",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AssetClassInvestment"
              }
            }
          }
        },
        "operationId": "GetAUAssetClassPerformance",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          },
          {
            "name": "AccountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "IncludeCash",
            "in": "query",
            "required": false,
            "description": "",
            "type": "boolean"
          },
          {
            "name": "IncludeLoans",
            "in": "query",
            "required": false,
            "description": "",
            "type": "boolean"
          },
          {
            "name": "IncludeTaxCredits",
            "in": "query",
            "required": false,
            "description": "",
            "type": "boolean"
          },
          {
            "name": "IncludeForeignTaxPaid",
            "in": "query",
            "required": false,
            "description": "",
            "type": "boolean"
          },
          {
            "name": "ExcludeAssets",
            "in": "query",
            "required": false,
            "description": "",
            "type": "boolean"
          },
          {
            "name": "CalculationMethod",
            "in": "query",
            "required": false,
            "description": "ApproximateReturns = 0, TimeWeightedReturn = 1.",
            "type": "enum"
          },
          {
            "name": "FromDate",
            "in": "query",
            "required": true,
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "ToDate",
            "in": "query",
            "required": true,
            "description": "",
            "format": "date-time",
            "type": "string"
          }
        ]
      }
    },
    "/api/performance": {
      "get": {
        "responses": {
          "200": {
            "description": "Performance",
            "schema": {
              "$ref": "#/definitions/Performance"
            }
          }
        },
        "operationId": "GetAUPerformance",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          },
          {
            "name": "AccountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "FromDate",
            "in": "query",
            "required": true,
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "ToDate",
            "in": "query",
            "required": true,
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "IncludeCash",
            "in": "query",
            "required": false,
            "description": "",
            "type": "boolean"
          },
          {
            "name": "IncludeLoans",
            "in": "query",
            "required": false,
            "description": "",
            "type": "boolean"
          },
          {
            "name": "ExcludeAssets",
            "in": "query",
            "required": false,
            "description": "",
            "type": "boolean"
          },
          {
            "name": "IncludeTaxCredits",
            "in": "query",
            "required": false,
            "description": "",
            "type": "boolean"
          },
          {
            "name": "DisplayReturns",
            "in": "query",
            "required": false,
            "description": "BeforeExpenses = 0, AfterExpenses = 1, Both = 2.",
            "type": "enum"
          },
          {
            "name": "MultiplePeriods",
            "in": "query",
            "required": false,
            "description": "<br><ul><li>0 - For the period only</li><li>4 - 1 mth, 3 mths, the period</li><li>9 - 1 mth, 3 mths, 6 mths, 1 yr, Since inception</li><li>11 - 1 mth, 3 mths, 6 mths, 1 yr, 2 yrs, 3 yrs, 4 yrs, 5 yrs, Since inception</li><li>16 - 1 mth, 3 mths, 6 mths, 1 yr, 3 yrs, 5 yrs, 10 yrs, Since inception</li><li>1 - 1 mth, 3 mths, 1 yr, the period</li><li>24 - 1 mth, 3 mths, 1 yr, 3 yrs, 5 yrs, the period</li><li>15 - 3 mths, 6 mths, 1 yr, 2 yrs, 3 yrs</li><li>17 - 3 mths, 6 mths, 1 yr, 3 yrs, 5 yrs</li><li>14 - 3 mths, 6 mths, 1 yr, 2 yrs, Since inception</li><li>13 - 3 mths, 1 yr, 2 yrs, 5 yrs, Since Inception</li><li>21 - 3 mths, 1 yr, 2 yrs, 3 yrs, Since inception</li><li>22 - 3 mths, 1 yr, 2 yr, 3 yrs, 5 yrs</li><li>18 - 3 mths, 1 yr, 3 yrs, 5 yrs, 7 yrs</li><li>2 - 3 mths, 1 yr, 3 yrs, the period</li><li>8 - 3 mths, 1 yr, 3 yrs, 5 yrs, Since inception</li><li>10 - 1 yr, 2 yrs, 3 yrs, 4 yrs, 5 yrs</li><li>19 - 1 yr, 3 yrs, 5 yrs, 7 yrs, 10 yrs</li><li>3 - 1 yr, 3 yrs, 5 yrs, the period</li><li>23 - 1 yr, 5 yrs, 10 yrs, Since inception</li><li>7 - Qtr to date, Fin yr to date, 1 yr,  Since inception</li><li>5 - Qtr to date, Fin yr to date, 3 yrs, 5 yrs</li><li>6 - Qtr to date, Fin yr to date, 3 yrs, Since inception</li><li>20 - The period, Qtr to date, Fin yr to date, Since inception</li><li>-1 - Account default</li></ul>",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "CalculationMethod",
            "in": "query",
            "required": false,
            "description": "ApproximateReturns = 0, TimeWeightedReturn = 1.",
            "type": "enum"
          }
        ]
      }
    },
    "/api/investmentmovementperformance": {
      "get": {
        "responses": {
          "200": {
            "description": "Investment movement performance",
            "schema": {
              "$ref": "#/definitions/InvestmentMovement"
            }
          }
        },
        "operationId": "GetAUInvestmentMovementPerformance",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          },
          {
            "name": "AccountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "FromDate",
            "in": "query",
            "required": true,
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "ToDate",
            "in": "query",
            "required": true,
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "IncludeTaxCredits",
            "in": "query",
            "required": false,
            "description": "",
            "type": "boolean"
          },
          {
            "name": "CalculationMethod",
            "in": "query",
            "required": false,
            "description": "ApproximateReturns = 0, TimeWeightedReturn = 1.",
            "type": "enum"
          }
        ]
      }
    },
    "/api/dailyreturns": {
      "get": {
        "responses": {
          "200": {
            "description": "Daily return performance",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DailyReturn"
              }
            }
          }
        },
        "operationId": "GetAUDailyReturns",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          },
          {
            "name": "AccountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "FromDate",
            "in": "query",
            "required": true,
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "ToDate",
            "in": "query",
            "required": true,
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "IncludeCash",
            "in": "query",
            "required": false,
            "description": "",
            "type": "boolean"
          },
          {
            "name": "ExcludeAssets",
            "in": "query",
            "required": false,
            "description": "",
            "type": "boolean"
          },
          {
            "name": "IncludeTaxCredits",
            "in": "query",
            "required": false,
            "description": "",
            "type": "boolean"
          },
          {
            "name": "DisplayReturns",
            "in": "query",
            "required": false,
            "description": "BeforeExpenses = 0, AfterExpenses = 1, Both = 2.",
            "type": "enum"
          },
          {
            "name": "CalculationMethod",
            "in": "query",
            "required": false,
            "description": "ApproximateReturns = 0, TimeWeightedReturn = 1.",
            "type": "enum"
          }
        ]
      }
    },
    "/api/benchmarks": {
      "get": {
        "responses": {
          "200": {
            "description": "Benchmarks",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Benchmark"
              }
            }
          }
        },
        "operationId": "GetAUBenchmarks",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/benchmarkperformance": {
      "get": {
        "responses": {
          "200": {
            "description": "Benchmark performance",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BenchmarkReturn"
              }
            }
          }
        },
        "operationId": "GetAUBenchmarkPerformance",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "BenchmarkId",
            "in": "query",
            "required": true,
            "description": "",
            "type": "string"
          },
          {
            "name": "MultiplePeriods",
            "in": "query",
            "required": false,
            "description": "<br><ul><li>0 - For the period only</li><li>4 - 1 mth, 3 mths, the period</li><li>9 - 1 mth, 3 mths, 6 mths, 1 yr, Since inception</li><li>11 - 1 mth, 3 mths, 6 mths, 1 yr, 2 yrs, 3 yrs, 4 yrs, 5 yrs, Since inception</li><li>16 - 1 mth, 3 mths, 6 mths, 1 yr, 3 yrs, 5 yrs, 10 yrs, Since inception</li><li>1 - 1 mth, 3 mths, 1 yr, the period</li><li>24 - 1 mth, 3 mths, 1 yr, 3 yrs, 5 yrs, the period</li><li>15 - 3 mths, 6 mths, 1 yr, 2 yrs, 3 yrs</li><li>17 - 3 mths, 6 mths, 1 yr, 3 yrs, 5 yrs</li><li>14 - 3 mths, 6 mths, 1 yr, 2 yrs, Since inception</li><li>13 - 3 mths, 1 yr, 2 yrs, 5 yrs, Since Inception</li><li>21 - 3 mths, 1 yr, 2 yrs, 3 yrs, Since inception</li><li>22 - 3 mths, 1 yr, 2 yr, 3 yrs, 5 yrs</li><li>18 - 3 mths, 1 yr, 3 yrs, 5 yrs, 7 yrs</li><li>2 - 3 mths, 1 yr, 3 yrs, the period</li><li>8 - 3 mths, 1 yr, 3 yrs, 5 yrs, Since inception</li><li>10 - 1 yr, 2 yrs, 3 yrs, 4 yrs, 5 yrs</li><li>19 - 1 yr, 3 yrs, 5 yrs, 7 yrs, 10 yrs</li><li>3 - 1 yr, 3 yrs, 5 yrs, the period</li><li>23 - 1 yr, 5 yrs, 10 yrs, Since inception</li><li>7 - Qtr to date, Fin yr to date, 1 yr,  Since inception</li><li>5 - Qtr to date, Fin yr to date, 3 yrs, 5 yrs</li><li>6 - Qtr to date, Fin yr to date, 3 yrs, Since inception</li><li>20 - The period, Qtr to date, Fin yr to date, Since inception</li><li>-1 - Account default</li></ul>",
            "format": "int32",
            "type": "integer"
          },
          {
            "name": "FromDate",
            "in": "query",
            "required": true,
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "ToDate",
            "in": "query",
            "required": true,
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/holdingsexcluded": {
      "get": {
        "responses": {
          "200": {
            "description": "Holdings excluded",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HoldingExcluded"
              }
            }
          }
        },
        "operationId": "GetAUHoldingsExcluded",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "AccountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "FromDate",
            "in": "query",
            "required": true,
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "ToDate",
            "in": "query",
            "required": true,
            "description": "",
            "format": "date-time",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/ssologin": {
      "post": {
        "responses": {
          "200": {
            "description": "SSO login",
            "schema": {
              "$ref": "#/definitions/SsoLoginResponse"
            }
          }
        },
        "operationId": "SsoLogin",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SsoLoginRequest"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/realisedcgt": {
      "get": {
        "responses": {
          "200": {
            "description": "Realised CGT",
            "schema": {
              "$ref": "#/definitions/RealisedCgt"
            }
          }
        },
        "operationId": "GetAURealisedCgt",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/realisedcgtsummary": {
      "get": {
        "responses": {
          "200": {
            "description": "Realised CGT summary",
            "schema": {
              "$ref": "#/definitions/TaxSummary"
            }
          }
        },
        "operationId": "GetAURealisedCgtSummary",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "Account ID.",
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "OAuth 2.0 access token.",
            "type": "string"
          },
          {
            "name": "x-pps-subscription-key",
            "in": "header",
            "required": true,
            "description": "Product subscription key.",
            "type": "string"
          },
          {
            "name": "x-pps-api-version",
            "in": "header",
            "required": true,
            "description": "API version of the endpoint.",
            "type": "string"
          }
        ]
      }
    },
    "/api/token": {
      "post": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TokenResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "description": "Must be **application/x-www-form-urlencoded**",
            "type": "string"
          },
          {
            "name": "client_id",
            "in": "body",
            "required": true,
            "description": "OAuth 2.0 client ID provided by Praemium.",
            "type": "string"
          },
          {
            "name": "client_secret",
            "in": "body",
            "required": true,
            "description": "OAuth 2.0 client secret provided by Praemium.",
            "type": "string"
          }
        ]
      }
    }
  },
  "definitions": {
    "Security": {
      "properties": {
        "Code": {
          "description": "Security code.",
          "type": "string"
        },
        "Exchange": {
          "description": "Security exchange.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "UnrealisedCgtParcel": {
      "properties": {
        "CgtGain": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "OtherGain": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "IndexedGain": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "DiscountedGain": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "OptimalCgtCalculationMethod": {
          "description": "",
          "type": "string"
        },
        "GrossGain": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "MarketValue": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "IndexedCost": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "AdjustedCost": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "TaxFreeAmount": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "TaxDeferredAmount": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "ActualCost": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "CostBaseUnknown": {
          "description": "",
          "type": "boolean"
        },
        "Quantity": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "PurchaseDate": {
          "description": "",
          "format": "date-time",
          "type": "string"
        },
        "TaxDate": {
          "description": "",
          "format": "date-time",
          "type": "string"
        },
        "Security": {
          "description": "",
          "$ref": "#/definitions/Security"
        },
        "CgtLoss": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "CgtExemptGainLoss": {
          "description": "",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "Metadata": {
      "properties": {
        "TotalCount": {
          "description": "",
          "format": "int32",
          "type": "integer"
        },
        "TotalPages": {
          "description": "",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [],
      "type": "object"
    },
    "UnrealisedCgtParcelIEnumerablePagedResponse": {
      "properties": {
        "Data": {
          "description": "",
          "items": {
            "$ref": "#/definitions/UnrealisedCgtParcel"
          },
          "type": "array"
        },
        "Metadata": {
          "description": "",
          "$ref": "#/definitions/Metadata"
        }
      },
      "required": [],
      "type": "object"
    },
    "UnrealisedCgtSummary": {
      "properties": {
        "CostBaseUnknown": {
          "description": "",
          "type": "boolean"
        },
        "ActualCost": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "AdjustedCost": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "MarketValue": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "GrossGain": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "DiscountedGain": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "IndexedGain": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "OtherGain": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "CgtGain": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "CgtLoss": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "CgtExemptGainLoss": {
          "description": "",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "Transaction": {
      "properties": {
        "DeemedAmount": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "CostBaseUnknown": {
          "description": "",
          "type": "boolean"
        },
        "BuyBack": {
          "description": "",
          "type": "boolean"
        },
        "AveragePriceInTradedCurrency": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "AmountInTradedCurrency": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "TradedCurrency": {
          "description": "",
          "type": "string"
        },
        "SettlementDate": {
          "description": "",
          "format": "date-time",
          "type": "string"
        },
        "AveragePriceInSettlementCurrency": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "AmountInSettlementCurrency": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "SettlementCurrency": {
          "description": "",
          "type": "string"
        },
        "Broker": {
          "description": "",
          "type": "string"
        },
        "GstClaimable": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "BrokerageGst": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "BrokerageIncludingGst": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "TransactionId": {
          "description": "",
          "type": "string"
        },
        "Security": {
          "description": "",
          "$ref": "#/definitions/Security"
        },
        "TransactionDate": {
          "description": "",
          "format": "date-time",
          "type": "string"
        },
        "Quantity": {
          "description": "",
          "format": "int32",
          "type": "integer"
        },
        "NetAmount": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "Unconfirmed": {
          "description": "",
          "type": "boolean"
        },
        "AveragePrice": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "DisposalMethod": {
          "description": "",
          "type": "string"
        },
        "Narration": {
          "description": "",
          "type": "string"
        },
        "TransactionTypeDescription": {
          "description": "",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "TransactionIEnumerablePagedResponse": {
      "properties": {
        "Data": {
          "description": "",
          "items": {
            "$ref": "#/definitions/Transaction"
          },
          "type": "array"
        },
        "Metadata": {
          "description": "",
          "$ref": "#/definitions/Metadata"
        }
      },
      "required": [],
      "type": "object"
    },
    "CashSummary": {
      "properties": {
        "CashBookCode": {
          "description": "",
          "type": "string"
        },
        "CashBookDescription": {
          "description": "",
          "type": "string"
        },
        "Currency": {
          "description": "",
          "type": "string"
        },
        "OpeningBalance": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "Deposits": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "Withdrawals": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "ClosingBalance": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "ClosingBalanceInAccountCurrency": {
          "description": "",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "CashTransaction": {
      "properties": {
        "TransactionId": {
          "description": "",
          "type": "string"
        },
        "TransactionDate": {
          "description": "",
          "format": "date-time",
          "type": "string"
        },
        "Currency": {
          "description": "",
          "type": "string"
        },
        "TransactionTypeDescription": {
          "description": "",
          "type": "string"
        },
        "Narration": {
          "description": "",
          "type": "string"
        },
        "Deposit": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "Withdrawal": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "ValueInAccountCurrency": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "Balance": {
          "description": "",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "CashBook": {
      "properties": {
        "Summary": {
          "description": "",
          "$ref": "#/definitions/CashSummary"
        },
        "Transactions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/CashTransaction"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "CashBookIEnumerablePagedResponse": {
      "properties": {
        "Data": {
          "description": "",
          "items": {
            "$ref": "#/definitions/CashBook"
          },
          "type": "array"
        },
        "Metadata": {
          "description": "",
          "$ref": "#/definitions/Metadata"
        }
      },
      "required": [],
      "type": "object"
    },
    "UnsettledTransaction": {
      "properties": {
        "Security": {
          "description": "",
          "$ref": "#/definitions/Security"
        },
        "TransactionDate": {
          "description": "",
          "format": "date-time",
          "type": "string"
        },
        "TransactionTypeDescription": {
          "description": "",
          "type": "string"
        },
        "Quantity": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "NetAmount": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "AveragePrice": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "Brokerage": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "Gst": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "GstRefund": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "DisposalMethod": {
          "description": "",
          "type": "string"
        },
        "Narration": {
          "description": "",
          "type": "string"
        },
        "TradedCurrency": {
          "description": "",
          "type": "string"
        },
        "AmountInTradedCurrency": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "AveragePriceInTradedCurrency": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "SettlementDate": {
          "description": "",
          "format": "date-time",
          "type": "string"
        },
        "ContractNoteReference": {
          "description": "",
          "type": "string"
        },
        "OtherCharges": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "OtherChargesGst": {
          "description": "",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "DrpType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1
      ]
    },
    "DividendReinvestmentDetail": {
      "properties": {
        "Security": {
          "description": "",
          "$ref": "#/definitions/Security"
        },
        "DrpType": {
          "description": "",
          "$ref": "#/definitions/DrpType"
        },
        "FromDate": {
          "description": "",
          "format": "date-time",
          "type": "string"
        },
        "ToDate": {
          "description": "",
          "format": "date-time",
          "type": "string"
        },
        "MaxSharesParticipating": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "PercentSharesParticipating": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "ExcludeFromDrp": {
          "description": "",
          "type": "boolean"
        }
      },
      "required": [],
      "type": "object"
    },
    "DividendReinvestmentDetailIEnumerablePagedResponse": {
      "properties": {
        "Data": {
          "description": "",
          "items": {
            "$ref": "#/definitions/DividendReinvestmentDetail"
          },
          "type": "array"
        },
        "Metadata": {
          "description": "",
          "$ref": "#/definitions/Metadata"
        }
      },
      "required": [],
      "type": "object"
    },
    "AssetClassValuation": {
      "properties": {
        "TotalCost": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "TotalValue": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "NetValue": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "TotalGainOrLoss": {
          "description": "",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "AssetClassDetails": {
      "properties": {
        "AssetClassDescription": {
          "description": "",
          "type": "string"
        },
        "Value": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "PercentTotalValue": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "PercentNetValue": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "MinTargetAllocation": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "MaxTargetAllocation": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "MidPointTargetAllocation": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "Variance": {
          "description": "",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "AssetClassReceivableAndPayable": {
      "properties": {
        "Description": {
          "description": "",
          "type": "string"
        },
        "TotalAmount": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "IncludedInNetValue": {
          "description": "",
          "type": "boolean"
        }
      },
      "required": [],
      "type": "object"
    },
    "AssetClassSummary": {
      "properties": {
        "Valuation": {
          "description": "",
          "$ref": "#/definitions/AssetClassValuation"
        },
        "AssetClasses": {
          "description": "",
          "items": {
            "$ref": "#/definitions/AssetClassDetails"
          },
          "type": "array"
        },
        "ReceivablesAndPayables": {
          "description": "",
          "items": {
            "$ref": "#/definitions/AssetClassReceivableAndPayable"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "HoldingValueByModel": {
      "properties": {
        "Security": {
          "description": "",
          "$ref": "#/definitions/Security"
        },
        "Value": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "Quantity": {
          "description": "",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "HoldingsByModel": {
      "properties": {
        "ModelCode": {
          "description": "",
          "type": "string"
        },
        "ModelPercentage": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "Holdings": {
          "description": "",
          "items": {
            "$ref": "#/definitions/HoldingValueByModel"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "HoldingsHistoryByModel": {
      "properties": {
        "Date": {
          "description": "",
          "format": "date-time",
          "type": "string"
        },
        "TotalValue": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "HoldingsByModel": {
          "description": "",
          "items": {
            "$ref": "#/definitions/HoldingsByModel"
          },
          "type": "array"
        },
        "HoldingsNotInModel": {
          "description": "",
          "items": {
            "$ref": "#/definitions/HoldingValueByModel"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "HoldingType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1
      ]
    },
    "TransferDirection": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1
      ]
    },
    "SecurityTransfer": {
      "properties": {
        "SecurityId": {
          "description": "Security ID.",
          "type": "string"
        },
        "Quantity": {
          "description": "Quantity of security.",
          "format": "double",
          "type": "number"
        },
        "HoldingType": {
          "description": "IssuerSponsored = 0, Chess = 1.",
          "$ref": "#/definitions/HoldingType"
        },
        "SponsorOrIssuer": {
          "description": "Is the security held with a sponsor or issuer.",
          "type": "string"
        },
        "ParticipantId": {
          "description": "Participant ID.",
          "format": "int32",
          "type": "integer"
        },
        "HinOrSrn": {
          "description": "Is the security transfer held under a HIN or SRN.",
          "type": "string"
        },
        "Direction": {
          "description": "In = 0, Out = 1.",
          "$ref": "#/definitions/TransferDirection"
        }
      },
      "required": [],
      "type": "object"
    },
    "PaymentFrequencyType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        1,
        3,
        6,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20
      ]
    },
    "RegularTransaction": {
      "properties": {
        "Amount": {
          "description": "Amount of regular transaction from the account.",
          "format": "double",
          "type": "number"
        },
        "Frequency": {
          "description": "Monthly = 1, ThreeMonthly = 3, SixMonthly = 6, Annually = 12, Quarterly = 13, HalfYearly = 14.",
          "$ref": "#/definitions/PaymentFrequencyType"
        },
        "CommencementDate": {
          "description": "Commencement date of the regular transaction.",
          "format": "date-time",
          "type": "string"
        },
        "TerminationDate": {
          "description": "Termination date of the regular transaction.",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "RegularContribution": {
      "properties": {
        "Amount": {
          "description": "Amount of regular cash contributions to the account.",
          "format": "double",
          "type": "number"
        },
        "Frequency": {
          "description": "Monthly = 1, ThreeMonthly = 3, SixMonthly = 6, Annually = 12, Quarterly = 13, HalfYearly = 14.",
          "$ref": "#/definitions/PaymentFrequencyType"
        }
      },
      "required": [],
      "type": "object"
    },
    "CashInvestmentMethod": {
      "format": "int32",
      "type": "integer",
      "enum": [
        1,
        2
      ]
    },
    "AccountSetup": {
      "properties": {
        "InitialInvestment": {
          "description": "Initial investment of account.",
          "format": "double",
          "type": "number"
        },
        "InitialTransferValue": {
          "description": "Estimated total in-specie value for transfers into the account.",
          "format": "double",
          "type": "number"
        },
        "CashInvestmentMethod": {
          "description": "Initial investment source. BPay = 1, Direct Debit = 2.",
          "$ref": "#/definitions/CashInvestmentMethod"
        }
      },
      "required": [
        "CashInvestmentMethod"
      ],
      "type": "object"
    },
    "EntityType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5
      ]
    },
    "FeeType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5
      ]
    },
    "AccountFee": {
      "properties": {
        "FeeType": {
          "description": "FeeTable = 0, Contribution = 1, Establishment = 2, Termination = 3, Withdrawal = 4, Ongoing = 5.",
          "$ref": "#/definitions/FeeType"
        },
        "Value": {
          "description": "Value of the fee.",
          "format": "double",
          "type": "number"
        },
        "IsPercent": {
          "description": "Whether the fee is a percent.",
          "type": "boolean"
        },
        "IncludesTax": {
          "description": "Fee including tax.",
          "type": "boolean"
        }
      },
      "required": [
        "FeeType"
      ],
      "type": "object"
    },
    "AccountModelLink": {
      "properties": {
        "ModelCode": {
          "description": "Model code.",
          "type": "string"
        },
        "ModelPercent": {
          "description": "Percentage of the model.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "BankAccount": {
      "properties": {
        "Bsb": {
          "description": "Bank account BSB.",
          "type": "string"
        },
        "AccountNumber": {
          "description": "Bank account number.",
          "type": "string"
        },
        "AccountName": {
          "description": "Bank account name.",
          "type": "string"
        },
        "Usages": {
          "description": "This allows you to define a regular cash addition or withdrawal from the account.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "Instruction": {
      "properties": {
        "ModelCode": {
          "description": "Model code.",
          "type": "string"
        },
        "Percentage": {
          "description": "Percentage of the model.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "SMAAccountRequest": {
      "properties": {
        "SecurityTransfers": {
          "description": "Security transfers.",
          "items": {
            "$ref": "#/definitions/SecurityTransfer"
          },
          "type": "array"
        },
        "RegularWithdrawal": {
          "description": "Bank account to be used for regular withdrawals.",
          "$ref": "#/definitions/RegularTransaction"
        },
        "RegularContribution": {
          "description": "Bank account to be used for direct debiting regular contribution plan.",
          "$ref": "#/definitions/RegularContribution"
        },
        "AccountSetup": {
          "description": "To be used for regular SMA accounts.",
          "$ref": "#/definitions/AccountSetup"
        },
        "Name": {
          "description": "Account name.",
          "type": "string"
        },
        "AdviserId": {
          "description": "Adviser ID to create the application under.",
          "format": "int32",
          "type": "integer"
        },
        "RegisteredName": {
          "description": "Account registered name.",
          "type": "string"
        },
        "EntityType": {
          "description": "The entity type of the account. Individual = 0, Trust = 1, Corporate = 2, Partnership = 3, Superfund = 4, Joint = 5.",
          "$ref": "#/definitions/EntityType"
        },
        "PdsId": {
          "description": "PDS ID of account.",
          "type": "string"
        },
        "CurrencyCode": {
          "description": "The currency code of the account.",
          "type": "string"
        },
        "IsCorporate": {
          "description": "Is the account a corporate.",
          "type": "boolean"
        },
        "Fees": {
          "description": "Account fees.",
          "items": {
            "$ref": "#/definitions/AccountFee"
          },
          "type": "array"
        },
        "Models": {
          "description": "Account models.",
          "minLength": 1,
          "items": {
            "$ref": "#/definitions/AccountModelLink"
          },
          "type": "array"
        },
        "BankAccounts": {
          "description": "Bank accounts.",
          "minLength": 1,
          "items": {
            "$ref": "#/definitions/BankAccount"
          },
          "type": "array"
        },
        "FeeInstructions": {
          "description": "Model allocation to deduct fees.",
          "items": {
            "$ref": "#/definitions/Instruction"
          },
          "type": "array"
        },
        "IncomeInstructions": {
          "description": "Model allocation to reinvest income.",
          "items": {
            "$ref": "#/definitions/Instruction"
          },
          "type": "array"
        }
      },
      "required": [
        "AccountSetup",
        "AdviserId",
        "BankAccounts",
        "CurrencyCode",
        "EntityType",
        "Models",
        "Name",
        "PdsId"
      ],
      "type": "object"
    },
    "AccountCreationResponse": {
      "properties": {
        "Id": {
          "description": "Unique application ID to be used as an application reference.",
          "type": "string"
        },
        "Code": {
          "description": "Account code.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "InflowsContributionSource": {
      "properties": {
        "SourceOfContribution": {
          "description": "Contribution source.",
          "type": "string"
        },
        "EntireBalance": {
          "description": "Whether the entire balance of the external fund account will be transferred.",
          "type": "boolean"
        },
        "ExpectedAmount": {
          "description": "Expected contribution amount to be transferred. Set if ContributionSources.EntireBalance is false.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "TransferMethodType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2
      ]
    },
    "InflowsTransfer": {
      "properties": {
        "TransferFromAccountId": {
          "description": "Account ID of the other SuperSMA account to transfer to this account.",
          "type": "string"
        },
        "TransferMethod": {
          "description": "WholeAmountWithClose = 0, WholeAmountKeepOpen = 1, SpecifiedAmount = 2 - whether the source account will be kept open.",
          "$ref": "#/definitions/TransferMethodType"
        },
        "Amount": {
          "description": "If Account.Transfers.TransferMethod is WholeAmountKeepOpenSpecifiedAmount, the amount to be transferred.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "ContributionTypes": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        11,
        12,
        13,
        21,
        22,
        23,
        24,
        31,
        32,
        33,
        41,
        42,
        43
      ]
    },
    "InflowsOtherContribution": {
      "properties": {
        "ContributionType": {
          "description": "Concessional_Employee = 11, Concessional_Personal = 12, Concessional_OtherFriendsAndFamily = 13, NonConcessional_Personal = 21, NonConcessional_SpouseAndChild = 22, NonConcessional_FirstHomeSaverAccount = 23, Exempt_CGT_15Year = 31, Exempt_CGT_Retirement = 32, Exempt_PersonalInjuryElection = 33, Other_GovernmentCoContribution = 41, Other_LowIncomeSuperContribution = 42, Downsizer = 43.",
          "$ref": "#/definitions/ContributionTypes"
        },
        "ExpectedAmount": {
          "description": "Expected other contribution amount to be transferred.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "SuperSmaAccumulationAccountRequest": {
      "properties": {
        "ContributionSources": {
          "description": "SuperSMA source of fund information.",
          "items": {
            "$ref": "#/definitions/InflowsContributionSource"
          },
          "type": "array"
        },
        "Transfers": {
          "description": "Contains details on other SuperSMA account(s) to be transferred to this account.",
          "items": {
            "$ref": "#/definitions/InflowsTransfer"
          },
          "type": "array"
        },
        "OtherContributions": {
          "description": "Contains details of other assets that will be used to fund this account.",
          "items": {
            "$ref": "#/definitions/InflowsOtherContribution"
          },
          "type": "array"
        },
        "EmployerContributions": {
          "description": "Employer contributions.",
          "type": "boolean"
        },
        "IsConsolidationAccount": {
          "description": "Is the account consolidated.",
          "type": "boolean"
        },
        "InitialInvestmentAmount": {
          "description": "For SuperSMA Accumulation accounts: the amount of cash that will be invested in the account.",
          "format": "double",
          "type": "number"
        },
        "InitialInvestmentType": {
          "description": "Concessional_Employee = 11, Concessional_Personal = 12, Concessional_OtherFriendsAndFamily = 13, NonConcessional_Personal = 21, NonConcessional_SpouseAndChild = 22, NonConcessional_FirstHomeSaverAccount = 23, Exempt_CGT_15Year = 31, Exempt_CGT_Retirement = 32, Exempt_PersonalInjuryElection = 33, Other_GovernmentCoContribution = 41, Other_LowIncomeSuperContribution = 42, Downsizer = 43.",
          "$ref": "#/definitions/ContributionTypes"
        },
        "ContributionType": {
          "description": "Concessional_Employee = 11, Concessional_Personal = 12, Concessional_OtherFriendsAndFamily = 13, NonConcessional_Personal = 21, NonConcessional_SpouseAndChild = 22, NonConcessional_FirstHomeSaverAccount = 23, Exempt_CGT_15Year = 31, Exempt_CGT_Retirement = 32, Exempt_PersonalInjuryElection = 33, Other_GovernmentCoContribution = 41, Other_LowIncomeSuperContribution = 42, Downsizer = 43.",
          "$ref": "#/definitions/ContributionTypes"
        },
        "RegularContribution": {
          "description": "Contains details of the regular contribution plan for this account.",
          "$ref": "#/definitions/RegularContribution"
        },
        "Name": {
          "description": "Account name.",
          "type": "string"
        },
        "AdviserId": {
          "description": "Adviser ID to create the application under.",
          "format": "int32",
          "type": "integer"
        },
        "RegisteredName": {
          "description": "Account registered name.",
          "type": "string"
        },
        "EntityType": {
          "description": "The entity type of the account. Individual = 0, Trust = 1, Corporate = 2, Partnership = 3, Superfund = 4, Joint = 5.",
          "$ref": "#/definitions/EntityType"
        },
        "PdsId": {
          "description": "PDS ID of account.",
          "type": "string"
        },
        "CurrencyCode": {
          "description": "The currency code of the account.",
          "type": "string"
        },
        "IsCorporate": {
          "description": "Is the account a corporate.",
          "type": "boolean"
        },
        "Fees": {
          "description": "Account fees.",
          "items": {
            "$ref": "#/definitions/AccountFee"
          },
          "type": "array"
        },
        "Models": {
          "description": "Account models.",
          "minLength": 1,
          "items": {
            "$ref": "#/definitions/AccountModelLink"
          },
          "type": "array"
        },
        "BankAccounts": {
          "description": "Bank accounts.",
          "minLength": 1,
          "items": {
            "$ref": "#/definitions/BankAccount"
          },
          "type": "array"
        },
        "FeeInstructions": {
          "description": "Model allocation to deduct fees.",
          "items": {
            "$ref": "#/definitions/Instruction"
          },
          "type": "array"
        },
        "IncomeInstructions": {
          "description": "Model allocation to reinvest income.",
          "items": {
            "$ref": "#/definitions/Instruction"
          },
          "type": "array"
        }
      },
      "required": [
        "AdviserId",
        "BankAccounts",
        "CurrencyCode",
        "EntityType",
        "InitialInvestmentAmount",
        "Models",
        "Name",
        "PdsId"
      ],
      "type": "object"
    },
    "ManagedPensionType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        1,
        2
      ]
    },
    "InflowsConsolidation": {
      "properties": {
        "UseExisting": {
          "description": "Link an existing SuperSMA accumulation account to the pension account.",
          "type": "boolean"
        },
        "AccountId": {
          "description": "Account ID.",
          "type": "string"
        },
        "TransferMethod": {
          "description": "WholeAmountWithClose = 0, WholeAmountKeepOpen = 1, SpecifiedAmount = 2 - whether the source account will be kept open.",
          "$ref": "#/definitions/TransferMethodType"
        },
        "Amount": {
          "description": "Specifies the amount of the transfer from the existing account.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PensionPaymentType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2
      ]
    },
    "SuperSmaPensionAccountRequest": {
      "properties": {
        "PensionType": {
          "description": "AccountBasedPension = 1, TransitionToRetirement = 2.",
          "$ref": "#/definitions/ManagedPensionType"
        },
        "ContributionSources": {
          "description": "SuperSMA source of fund information.",
          "items": {
            "$ref": "#/definitions/InflowsContributionSource"
          },
          "type": "array"
        },
        "Transfers": {
          "description": "Contains details on other SuperSMA account(s) to be transferred to this account.",
          "items": {
            "$ref": "#/definitions/InflowsTransfer"
          },
          "type": "array"
        },
        "OtherContributions": {
          "description": "Contains details of other assets that will be used to fund this account.",
          "items": {
            "$ref": "#/definitions/InflowsOtherContribution"
          },
          "type": "array"
        },
        "Consolidation": {
          "description": "Establish an accumulation account. You can open an accumulation account in the same application alongside a pension account. Only available for SuperSMA Pension.",
          "$ref": "#/definitions/InflowsConsolidation"
        },
        "PensionPayments": {
          "description": "Payment amount paid from the pension account. Only available for SuperSMA Pension.",
          "$ref": "#/definitions/RegularTransaction"
        },
        "PaymentType": {
          "description": "Whether the pension payment will be (0) a specified amount; (1) the minimum amount; or (2) the maximum amount. Only available for SuperSMA Pension",
          "$ref": "#/definitions/PensionPaymentType"
        },
        "CentrelinkSchedule": {
          "description": "If a Centrelink schedule is required.",
          "type": "boolean"
        },
        "PensionPaymentInstructions": {
          "description": "Pension payment instructions.",
          "items": {
            "$ref": "#/definitions/Instruction"
          },
          "type": "array"
        },
        "Name": {
          "description": "Account name.",
          "type": "string"
        },
        "AdviserId": {
          "description": "Adviser ID to create the application under.",
          "format": "int32",
          "type": "integer"
        },
        "RegisteredName": {
          "description": "Account registered name.",
          "type": "string"
        },
        "EntityType": {
          "description": "The entity type of the account. Individual = 0, Trust = 1, Corporate = 2, Partnership = 3, Superfund = 4, Joint = 5.",
          "$ref": "#/definitions/EntityType"
        },
        "PdsId": {
          "description": "PDS ID of account.",
          "type": "string"
        },
        "CurrencyCode": {
          "description": "The currency code of the account.",
          "type": "string"
        },
        "IsCorporate": {
          "description": "Is the account a corporate.",
          "type": "boolean"
        },
        "Fees": {
          "description": "Account fees.",
          "items": {
            "$ref": "#/definitions/AccountFee"
          },
          "type": "array"
        },
        "Models": {
          "description": "Account models.",
          "minLength": 1,
          "items": {
            "$ref": "#/definitions/AccountModelLink"
          },
          "type": "array"
        },
        "BankAccounts": {
          "description": "Bank accounts.",
          "minLength": 1,
          "items": {
            "$ref": "#/definitions/BankAccount"
          },
          "type": "array"
        },
        "FeeInstructions": {
          "description": "Model allocation to deduct fees.",
          "items": {
            "$ref": "#/definitions/Instruction"
          },
          "type": "array"
        },
        "IncomeInstructions": {
          "description": "Model allocation to reinvest income.",
          "items": {
            "$ref": "#/definitions/Instruction"
          },
          "type": "array"
        }
      },
      "required": [
        "AdviserId",
        "BankAccounts",
        "CurrencyCode",
        "EntityType",
        "Models",
        "Name",
        "PaymentType",
        "PdsId",
        "PensionType"
      ],
      "type": "object"
    },
    "AccountType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        25,
        26,
        27,
        28
      ]
    },
    "ChildAccountAU": {
      "properties": {
        "Id": {
          "description": "Child account ID.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "AccountModelWeighting": {
      "properties": {
        "ModelCode": {
          "description": "Model code.",
          "type": "string"
        },
        "Percentage": {
          "description": "Model percentage.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "RebalanceType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1
      ]
    },
    "FeeClass": {
      "format": "int32",
      "type": "integer",
      "enum": [
        1,
        2
      ]
    },
    "PdsFeeTier": {
      "properties": {
        "ValueAppliedFrom": {
          "description": "The value is applied from.",
          "format": "double",
          "type": "number"
        },
        "FeePercent": {
          "description": "Fee percent.",
          "format": "double",
          "type": "number"
        },
        "FeePercentWithTax": {
          "description": "Fee percent with tax.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PdsFeeOverwriteSettings": {
      "properties": {
        "MinAmount": {
          "description": "Fee overwrite minimum amount.",
          "format": "double",
          "type": "number"
        },
        "MaxAmount": {
          "description": "Fee overwrite maximum amount.",
          "format": "double",
          "type": "number"
        },
        "MinAmountWithTax": {
          "description": "Fee overwrite minimum amount with tax.",
          "format": "double",
          "type": "number"
        },
        "MaxAmountWithTax": {
          "description": "Fee overwrite maximum amount with tax.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "FeeValueType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        1,
        2
      ]
    },
    "FeeIndexationType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2
      ]
    },
    "PdsFeeIndexationSettings": {
      "properties": {
        "Type": {
          "description": "None = 0, Both = 0, Cpi = 1, Custom = 2.",
          "$ref": "#/definitions/FeeIndexationType"
        },
        "TypeAllowed": {
          "description": "None = 0, Both = 0, Cpi = 1, Custom = 2.",
          "$ref": "#/definitions/FeeIndexationType"
        },
        "Value": {
          "description": "Fee indexation value.",
          "format": "double",
          "type": "number"
        },
        "ValueMax": {
          "description": "Fee indexation maximum value.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PdsFee": {
      "properties": {
        "Id": {
          "description": "ID of fee.",
          "type": "string"
        },
        "Type": {
          "description": "FeeTable = 0, Contribution = 1, Establishment = 2, Termination = 3, Withdrawal = 4, Ongoing = 5.",
          "$ref": "#/definitions/FeeType"
        },
        "Class": {
          "description": "Adviser = 1, NonAdviser = 2.",
          "$ref": "#/definitions/FeeClass"
        },
        "Name": {
          "description": "Name of fee.",
          "type": "string"
        },
        "Tiers": {
          "description": "Tiers of fee.",
          "items": {
            "$ref": "#/definitions/PdsFeeTier"
          },
          "type": "array"
        },
        "DollarOverwriteSettings": {
          "description": "Dollar overwrite settings.",
          "$ref": "#/definitions/PdsFeeOverwriteSettings"
        },
        "PercentOverwriteSettings": {
          "description": "Percent overwrite settings.",
          "$ref": "#/definitions/PdsFeeOverwriteSettings"
        },
        "DefaultValue": {
          "description": "Default value of overwrite.",
          "format": "double",
          "type": "number"
        },
        "DefaultValueWithTax": {
          "description": "Default value of overwrite with tax.",
          "format": "double",
          "type": "number"
        },
        "DefaultType": {
          "description": "Dollar = 1, Percent = 2.",
          "$ref": "#/definitions/FeeValueType"
        },
        "IndexationSettings": {
          "description": "Indexation settings.",
          "$ref": "#/definitions/PdsFeeIndexationSettings"
        }
      },
      "required": [],
      "type": "object"
    },
    "BankAccountUsage": {
      "properties": {
        "Usage": {
          "description": "This allows you to define a regular cash addition or withdrawal from the account.",
          "type": "string"
        },
        "Description": {
          "description": "This will advise the bank account usage.",
          "type": "string"
        },
        "IsMandatory": {
          "description": "If the bank account is mandatory, true or false.",
          "type": "boolean"
        },
        "HelpText": {
          "description": "Help text with regards to the bank account.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "PdsTaxOption": {
      "properties": {
        "Code": {
          "description": "Tax Option code.",
          "type": "string"
        },
        "Description": {
          "description": "Tax option description.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "ApplicantRegion": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2
      ]
    },
    "FeeTier": {
      "properties": {
        "From": {
          "description": "Value from which the fee tier is applicable.",
          "format": "double",
          "type": "number"
        },
        "Percentage": {
          "description": "Fee percentage.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "FeeOverride": {
      "properties": {
        "Name": {
          "description": "Name of the fee override.",
          "type": "string"
        },
        "Id": {
          "description": "Fee override ID.",
          "type": "string"
        },
        "Value": {
          "description": "Fee override value.",
          "format": "double",
          "type": "number"
        },
        "IsTiered": {
          "description": "If the fee override is tiered.",
          "type": "boolean"
        },
        "Tiers": {
          "description": "The fee override tier if applicable.",
          "items": {
            "$ref": "#/definitions/FeeTier"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "Product": {
      "properties": {
        "Id": {
          "description": "Product ID.",
          "type": "string"
        },
        "IsSingleBankAccount": {
          "description": "Is a single bank account, true or false.",
          "type": "boolean"
        },
        "ProductProviderName": {
          "description": "Product provider name.",
          "type": "string"
        },
        "ProductName": {
          "description": "Product name.",
          "type": "string"
        },
        "TaxWrapperId": {
          "description": "Tax wrapper ID. CgtChargeable = 1, TaxExempt = 2, Isa = 4, OffshoreBond = 5, OnshoreBond = 6, PersonalPension = 7, RtsRats = 8, Sipp = 9, GroupSipp = 10, Ssas = 11, S32 = 12, TrustNotUkTaxable = 13, CompanyNotUkTaxable = 14, Qnups = 15, Qrops = 16, Efurbs = 17, Ebt = 18, Jisa = 20, OffshoreBondPersonalised = 21.",
          "format": "int32",
          "type": "integer"
        },
        "AvailableModelCodes": {
          "description": "List of available model codes.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "DisableAdviserFeesUk": {
          "description": "Disable adviser fees UK.",
          "type": "boolean"
        },
        "DisableAdviserFeesInternational": {
          "description": "Disable adviser fees International.",
          "type": "boolean"
        }
      },
      "required": [],
      "type": "object"
    },
    "User": {
      "properties": {
        "UserId": {
          "description": "User ID.",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [],
      "type": "object"
    },
    "CedingPartyResponse": {
      "properties": {
        "CedingPartyId": {
          "description": "Ceding party ID.",
          "type": "string"
        },
        "CedingPartyName": {
          "description": "Ceding party name.",
          "type": "string"
        },
        "AcceptsElectronicTransfer": {
          "description": "Ceding party accepts electronic transfers.",
          "type": "boolean"
        }
      },
      "required": [],
      "type": "object"
    },
    "SecurityResponse": {
      "properties": {
        "Id": {
          "description": "Security ID.",
          "type": "string"
        },
        "Code": {
          "description": "Security code.",
          "type": "string"
        },
        "Description": {
          "description": "Description.",
          "type": "string"
        },
        "ISIN": {
          "description": "ISIN of security code.",
          "type": "string"
        },
        "Exchange": {
          "description": "Exchange of security.",
          "type": "string"
        },
        "IsAllowedByApl": {
          "description": "Is the security allowed by the Approved Product List.",
          "type": "boolean"
        }
      },
      "required": [],
      "type": "object"
    },
    "ServiceRecalcStatus": {
      "properties": {
        "RecalcAsAtDate": {
          "description": "",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "SecurityExclusionResponse": {
      "properties": {
        "CreatedDate": {
          "description": "Date security exclusion was created.",
          "format": "date-time",
          "type": "string"
        },
        "Security": {
          "description": "Security name.",
          "$ref": "#/definitions/Security"
        }
      },
      "required": [],
      "type": "object"
    },
    "SecurityExclusion": {
      "properties": {
        "SecurityId": {
          "description": "Security ID.",
          "type": "string"
        }
      },
      "required": [
        "SecurityId"
      ],
      "type": "object"
    },
    "SecurityExclusionRequest": {
      "properties": {
        "AccountId": {
          "description": "Account ID.",
          "type": "string"
        },
        "SecurityExclusions": {
          "description": "Security exclusion.",
          "items": {
            "$ref": "#/definitions/SecurityExclusion"
          },
          "type": "array"
        }
      },
      "required": [
        "AccountId"
      ],
      "type": "object"
    },
    "SecuritySubstitutionResponse": {
      "properties": {
        "CreatedDate": {
          "description": "Date security substitution was created.",
          "format": "date-time",
          "type": "string"
        },
        "FromSecurity": {
          "description": "From security.",
          "$ref": "#/definitions/Security"
        },
        "ToSecurity": {
          "description": "To security.",
          "$ref": "#/definitions/Security"
        }
      },
      "required": [],
      "type": "object"
    },
    "SecuritySubstitution": {
      "properties": {
        "FromSecurityId": {
          "description": "From security ID.",
          "type": "string"
        },
        "ToSecurityId": {
          "description": "To security ID.",
          "type": "string"
        }
      },
      "required": [
        "FromSecurityId",
        "ToSecurityId"
      ],
      "type": "object"
    },
    "SecuritySubstitutionRequest": {
      "properties": {
        "AccountId": {
          "description": "Account ID.",
          "type": "string"
        },
        "SecuritySubstitutions": {
          "description": "Security substitution.",
          "items": {
            "$ref": "#/definitions/SecuritySubstitution"
          },
          "type": "array"
        }
      },
      "required": [
        "AccountId"
      ],
      "type": "object"
    },
    "RebalanceTolerance": {
      "properties": {
        "Amount": {
          "description": "Rebalance tolerance amount. Prevents trades of a value less than this figure.",
          "format": "double",
          "type": "number"
        },
        "Percentage": {
          "description": "Rebalance tolerance percentage. Prevents trades unless they exceed this figure as a percentage of the portfolio’s value. For example, if this is set to 5, only trades that exceed five percent of the portfolio’s total value are performed.",
          "format": "double",
          "type": "number"
        },
        "Units": {
          "description": "Rebalance tolernace number of units. Prevents trades of a quantity less than this figure.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PatchMinimumTradeSizeRequest": {
      "properties": {
        "AccountId": {
          "description": "Account ID.",
          "type": "string"
        },
        "Amount": {
          "description": "Minimum trade size amount. Prevents trades of a value less than this figure.",
          "format": "double",
          "type": "number"
        },
        "Percentage": {
          "description": "Minimum trade size percentage. Prevents trades unless they exceed this figure as a percentage of the portfolio’s value. For example, if this is set to 5, only trades that exceed five percent of the portfolio’s total value are performed.",
          "format": "double",
          "type": "number"
        },
        "Units": {
          "description": "Minimum trade size number of units. Prevents trades of a quantity less than this figure.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "AccountId",
        "Amount",
        "Percentage",
        "Units"
      ],
      "type": "object"
    },
    "DraftAddressAU": {
      "properties": {
        "Street": {
          "description": "",
          "type": "string"
        },
        "Line2": {
          "description": "",
          "type": "string"
        },
        "Line3": {
          "description": "",
          "type": "string"
        },
        "Postcode": {
          "description": "",
          "type": "string"
        },
        "Suburb": {
          "description": "",
          "type": "string"
        },
        "CountryCode": {
          "description": "",
          "type": "string"
        },
        "IsRegistered": {
          "description": "",
          "type": "boolean"
        }
      },
      "required": [
        "Street"
      ],
      "type": "object"
    },
    "CorporateCapacity": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ]
    },
    "IdentificationType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3
      ]
    },
    "MissingReason": {
      "format": "int32",
      "type": "integer",
      "enum": [
        1,
        2,
        99
      ]
    },
    "DraftApplicantIdentification": {
      "properties": {
        "Type": {
          "description": "Identification type of applicant.",
          "$ref": "#/definitions/IdentificationType"
        },
        "Value": {
          "description": "Identification value of applicant.",
          "type": "string"
        },
        "MissingReason": {
          "description": "CountryDoesntIssue = 1, DontNeedOne = 2, Other = 99.",
          "$ref": "#/definitions/MissingReason"
        },
        "MissingReasonText": {
          "description": "Reason identification of applicant is missing.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "Gender": {
      "format": "int32",
      "type": "integer",
      "enum": [
        1,
        2
      ]
    },
    "ApplicantType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2
      ]
    },
    "Frequency": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3
      ]
    },
    "DraftPensionPayment": {
      "properties": {
        "Type": {
          "description": "Specified = 0, Minimum = 1, Maximum = 2.",
          "$ref": "#/definitions/PensionPaymentType"
        },
        "Amount": {
          "description": "Amount of pension payment.",
          "format": "double",
          "type": "number"
        },
        "Frequency": {
          "description": "Monthly = 0, Quarterly = 1, SemiAnnually = 2, Annually = 3.",
          "$ref": "#/definitions/Frequency"
        },
        "CommencementDate": {
          "description": "Commencement date of pension payment.",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "DraftTargetAllocationInstruction": {
      "properties": {
        "Code": {
          "description": "Code for target allocation instruction.",
          "type": "string"
        },
        "Percentage": {
          "description": "Percentage for target allocation instruction.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "Code"
      ],
      "type": "object"
    },
    "DraftTargetAllocation": {
      "properties": {
        "Fees": {
          "description": "Fees.",
          "items": {
            "$ref": "#/definitions/DraftTargetAllocationInstruction"
          },
          "type": "array"
        },
        "Income": {
          "description": "Income.",
          "items": {
            "$ref": "#/definitions/DraftTargetAllocationInstruction"
          },
          "type": "array"
        },
        "Payments": {
          "description": "Payments.",
          "items": {
            "$ref": "#/definitions/DraftTargetAllocationInstruction"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "InflowsContributionSourceFund": {
      "properties": {
        "ProductName": {
          "description": "Product name.",
          "type": "string"
        },
        "Usi": {
          "description": "USI of product.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "DraftInflowsContributionSource": {
      "properties": {
        "MemberNumber": {
          "description": "Member number.",
          "type": "string"
        },
        "SourceOfContribution": {
          "description": "Source of contribution.",
          "$ref": "#/definitions/InflowsContributionSourceFund"
        },
        "EntireBalance": {
          "description": "If the entire balance.",
          "type": "boolean"
        },
        "ExpectedAmount": {
          "description": "Expected amount.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "SmaTransferMethodType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2
      ]
    },
    "DraftInflowsContributionTransfer": {
      "properties": {
        "AccountId": {
          "description": "Account ID.",
          "type": "string"
        },
        "TransferMethod": {
          "description": "WholeAmountWithClose = 0, WholeAmountKeepOpen = 1, SpecifiedAmount = 2 - whether the source account will be kept open.",
          "$ref": "#/definitions/SmaTransferMethodType"
        },
        "Amount": {
          "description": "AMount.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "ContributionType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        11,
        12,
        13,
        21,
        22,
        23,
        24,
        31,
        32,
        33,
        41,
        42,
        43
      ]
    },
    "DraftInflowsOtherContribution": {
      "properties": {
        "ContributionType": {
          "description": "NonConcessional_Personal = 21, NonConcessional_Spouse = 22, NonConcessional_Child = 24, Downsizer = 43.",
          "$ref": "#/definitions/ContributionType"
        },
        "ExpectedAmount": {
          "description": "Expected amount.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "ContributionType"
      ],
      "type": "object"
    },
    "DraftInitialInvestmentSuper": {
      "properties": {
        "ContributionSources": {
          "description": "Contribution sources.",
          "items": {
            "$ref": "#/definitions/DraftInflowsContributionSource"
          },
          "type": "array"
        },
        "Transfers": {
          "description": "Transfers.",
          "items": {
            "$ref": "#/definitions/DraftInflowsContributionTransfer"
          },
          "type": "array"
        },
        "OtherContributions": {
          "description": "Other contributions.",
          "items": {
            "$ref": "#/definitions/DraftInflowsOtherContribution"
          },
          "type": "array"
        },
        "AccumContribution": {
          "description": "Accumulation contribution.",
          "$ref": "#/definitions/DraftInflowsOtherContribution"
        }
      },
      "required": [],
      "type": "object"
    },
    "BeneficiaryRelationship": {
      "format": "int32",
      "type": "integer",
      "enum": [
        1,
        2,
        3,
        8
      ]
    },
    "NominatedReversionaryBeneficiary": {
      "properties": {
        "Sex": {
          "description": "Male = 1, Female = 2.",
          "$ref": "#/definitions/Gender"
        },
        "FullName": {
          "description": "Full name of beneficiary.",
          "type": "string"
        },
        "Relationship": {
          "description": "Spouse = 1, Child = 2, Other = 3.",
          "$ref": "#/definitions/BeneficiaryRelationship"
        },
        "DateOfBirth": {
          "description": "Date of birth of beneficiary.",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "DraftNominatedBeneficiary": {
      "properties": {
        "Proportion": {
          "description": "The portion of the benefit that should be paid to the beneficiary. These must add up to 100%.",
          "format": "double",
          "type": "number"
        },
        "Address": {
          "description": "Address of the beneficiary.",
          "$ref": "#/definitions/DraftAddressAU"
        },
        "FullName": {
          "description": "Full name of beneficiary.",
          "type": "string"
        },
        "Relationship": {
          "description": "Spouse = 1, Child = 2, Other = 3, PersonalLegalRepresentative = 8.",
          "$ref": "#/definitions/BeneficiaryRelationship"
        },
        "DateOfBirth": {
          "description": "Date of birth of beneficiary.",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "DraftAccountType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18
      ]
    },
    "DraftModel": {
      "properties": {
        "Code": {
          "description": "Model code.",
          "type": "string"
        },
        "Proportion": {
          "description": "Proportion of model.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "Code"
      ],
      "type": "object"
    },
    "DraftSecurity": {
      "properties": {
        "Code": {
          "description": "Security code of the security.",
          "type": "string"
        },
        "Exchange": {
          "description": "Exchange code of the security.",
          "type": "string"
        }
      },
      "required": [
        "Code",
        "Exchange"
      ],
      "type": "object"
    },
    "DraftExclusion": {
      "properties": {
        "Security": {
          "description": "Security code of the exclusion.",
          "$ref": "#/definitions/DraftSecurity"
        }
      },
      "required": [],
      "type": "object"
    },
    "PaymentMethods": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3,
        4
      ]
    },
    "DraftInitialInvestment": {
      "properties": {
        "Cash": {
          "description": "Select if the initial investment will include cash.",
          "format": "double",
          "type": "number"
        },
        "Shares": {
          "description": "Select if the initial investment will include shares.",
          "format": "double",
          "type": "number"
        },
        "Method": {
          "description": "BPay = 0, DirectDebit = 1, ElectronicTransfer = 2, Cheque = 3.",
          "$ref": "#/definitions/PaymentMethods"
        }
      },
      "required": [
        "Method"
      ],
      "type": "object"
    },
    "ApplicationUploadResult": {
      "properties": {
        "ApplicationId": {
          "description": "Unique application ID to be used as an application reference.",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "DraftIdentifierType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3,
        4
      ]
    },
    "DraftNationalIdentifier": {
      "properties": {
        "CountryOfNationality": {
          "description": "Applicant's country of national identifier.",
          "type": "string"
        },
        "IdentifierType": {
          "description": "NoDocument = 0, NationalId = 1, Passport = 2, TaxNumber = 3, LEI = 4.",
          "$ref": "#/definitions/DraftIdentifierType"
        },
        "IdentifierCode": {
          "description": "Applicant's national identifier code.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "CompanyType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3
      ]
    },
    "DraftApplicantTaxResidence": {
      "properties": {
        "CountryCode": {
          "description": "Tax residence country code.",
          "type": "string"
        },
        "From": {
          "description": "From date that applicant held tax residence in that country.",
          "format": "date-time",
          "type": "string"
        },
        "To": {
          "description": "To date that applicant held tax residence in that country.",
          "format": "date-time",
          "type": "string"
        },
        "Identification": {
          "description": "Tax residence identification.",
          "type": "string"
        },
        "NoDocument": {
          "description": "If the applicant does not hold a identification document.",
          "type": "boolean"
        }
      },
      "required": [],
      "type": "object"
    },
    "TrustNature": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12
      ]
    },
    "DraftRegularTransaction": {
      "properties": {
        "Amount": {
          "description": "Amount of the regular contribution.",
          "format": "double",
          "type": "number"
        },
        "Method": {
          "description": "ElectronicTransfer (not applicable for regular contribution) = 2, Cheque = 3, StandingOrder (for regular contribution only) = 4.",
          "$ref": "#/definitions/PaymentMethods"
        },
        "Frequency": {
          "description": "Monthly = 1, ThreeMonthly = 3, SixMonthly = 6, Annually = 12, Quarterly = 13, HalfYearly = 14.",
          "$ref": "#/definitions/Frequency"
        }
      },
      "required": [
        "Method"
      ],
      "type": "object"
    },
    "Region": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2
      ]
    },
    "InSpecieCashStockTransferType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1
      ]
    },
    "DraftInSpecieCashStockTransferDetails": {
      "properties": {
        "SecurityIsin": {
          "description": "Security ISIN of stock transfer.",
          "type": "string"
        },
        "Quantity": {
          "description": "Quantity of stock transfer.",
          "format": "double",
          "type": "number"
        },
        "BookCost": {
          "description": "Book cost of stock transfer.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "SecurityIsin"
      ],
      "type": "object"
    },
    "DraftInSpecieCashStockTransfer": {
      "properties": {
        "TransferType": {
          "description": "StockAndCash = 0, CashOnly = 1.",
          "$ref": "#/definitions/InSpecieCashStockTransferType"
        },
        "CedingPartyId": {
          "description": "Ceding party ID.",
          "type": "string"
        },
        "CedingAccountNumber": {
          "description": "Ceding account number.",
          "type": "string"
        },
        "InSpecieCashStockTransferDetails": {
          "description": "In specie cash stock transfer details.",
          "items": {
            "$ref": "#/definitions/DraftInSpecieCashStockTransferDetails"
          },
          "type": "array"
        },
        "CashTransferAmount": {
          "description": "Cash transfer amount.",
          "format": "double",
          "type": "number"
        },
        "AmountUsedThisYear": {
          "description": "Amount used this year.",
          "format": "double",
          "type": "number"
        },
        "FeeAmount": {
          "description": "Fee amount.",
          "format": "double",
          "type": "number"
        },
        "FeePercent": {
          "description": "Fee percent.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "TransferType"
      ],
      "type": "object"
    },
    "TradeFreezeReason": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ]
    },
    "CostAndChargeType": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3,
        4
      ]
    },
    "DraftCostAndCharge": {
      "properties": {
        "Type": {
          "description": "OneOffCharges = 0, OngoingCharges = 1, TransactionCharges = 2, IncidentalCharges = 3, ThirdPartyPayment = 4.",
          "$ref": "#/definitions/CostAndChargeType"
        },
        "Amount": {
          "description": "Amount of cost and charge.",
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "Type"
      ],
      "type": "object"
    },
    "DraftIllustrationData": {
      "properties": {
        "CostsAndCharges": {
          "description": "Cost and charges.",
          "items": {
            "$ref": "#/definitions/DraftCostAndCharge"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "AccountLifeCycle": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ]
    },
    "ApplicationAccountStatus": {
      "properties": {
        "AccountCode": {
          "description": "Account code.",
          "type": "string"
        },
        "Status": {
          "description": "Draft = 0, AwaitingSignature = 1, AwaitingApproval = 2, AwaitingFund = 3, Funded = 4, Trading = 5, ClosureRequested = 6, Closed = 7, Deleted = 8.",
          "$ref": "#/definitions/AccountLifeCycle"
        }
      },
      "required": [],
      "type": "object"
    },
    "ApplicationStatus": {
      "properties": {
        "ApplicationId": {
          "description": "Unique application ID to be used as an application reference.",
          "format": "uuid",
          "type": "string"
        },
        "Status": {
          "description": "Draft / Submitted.",
          "type": "string"
        },
        "AccountsStatus": {
          "description": "Account status.",
          "items": {
            "$ref": "#/definitions/ApplicationAccountStatus"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "Expense": {
      "properties": {
        "ExpenseId": {
          "description": "",
          "type": "string"
        },
        "EffectiveDate": {
          "description": "",
          "format": "date-time",
          "type": "string"
        },
        "TaxDate": {
          "description": "",
          "format": "date-time",
          "type": "string"
        },
        "PaymentDate": {
          "description": "",
          "format": "date-time",
          "type": "string"
        },
        "ExpenseIncludingGst": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "ExpenseExcludingGst": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "GstRefundableAmount": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "DeductibleAmount": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "NonDeductibleAmount": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "ExpenseNarration": {
          "description": "",
          "type": "string"
        },
        "ExpenseTypeGroupDescription": {
          "description": "",
          "type": "string"
        },
        "ExpenseTypeDescription": {
          "description": "",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "IncomeAndTaxCredit": {
      "properties": {
        "TaxWithheld": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "Receivable": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "CashAmount": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "Drp": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "IncomeTotal": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "Currency": {
          "description": "",
          "type": "string"
        },
        "PaymentDate": {
          "description": "",
          "format": "date-time",
          "type": "string"
        },
        "ExecutionDate": {
          "description": "",
          "format": "date-time",
          "type": "string"
        },
        "Security": {
          "description": "",
          "$ref": "#/definitions/Security"
        },
        "IncomeTypeDescription": {
          "description": "",
          "type": "string"
        },
        "IncomeSource": {
          "description": "",
          "type": "string"
        },
        "IncomeId": {
          "description": "",
          "type": "string"
        },
        "ForeignTaxPay": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "FrankingCredit": {
          "description": "",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "IncomeSchedule": {
      "properties": {
        "CashAmount": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "TrustOtherExpenses": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "ForeignIncomeTaxOffsetsTotal": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "TaxWithheld": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "IncomeTotal": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "NonAssessableTotal": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "TrustCGTDistributionsTotal": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "ForeignIncomeTotal": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "Drp": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "TrustOtherAust": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "FrankedTotal": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "UnfrankedTotal": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "Interest": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "TaxDate": {
          "description": "",
          "format": "date-time",
          "type": "string"
        },
        "AssetDescription": {
          "description": "",
          "type": "string"
        },
        "IncomeTypeDescription": {
          "description": "",
          "type": "string"
        },
        "IncomeId": {
          "description": "",
          "type": "string"
        },
        "FrankingCreditsTotal": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "AccruedAmount": {
          "description": "",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "AssetClassInvestment": {
      "properties": {
        "AssetClassDescription": {
          "description": "",
          "type": "string"
        },
        "Benchmark": {
          "description": "",
          "type": "string"
        },
        "StartValue": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "EndValue": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "TotalReturn": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "TotalReturnPercent": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "BenchmarkReturnPercent": {
          "description": "",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "DollarReturnData": {
      "properties": {
        "CapitalAppreciation": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "TotalIncome": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "TaxCredits": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "ForexMovements": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "GrossDollarReturn": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "TotalExpenses": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "NetDollarReturn": {
          "description": "",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PerformanceReturn": {
      "properties": {
        "PeriodDescription": {
          "description": "",
          "type": "string"
        },
        "GrossPercentReturn": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "NetPercentReturn": {
          "description": "",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "Performance": {
      "properties": {
        "HoldingsExcluded": {
          "description": "",
          "type": "boolean"
        },
        "BeginningMarketValue": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "EndingMarketValue": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "NetCapitalMovement": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "NetInternalTransfers": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "CashExpenses": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "UnallocatedAmount": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "DollarReturn": {
          "description": "",
          "$ref": "#/definitions/DollarReturnData"
        },
        "PercentReturns": {
          "description": "",
          "items": {
            "$ref": "#/definitions/PerformanceReturn"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "Investment": {
      "properties": {
        "PercentTotalReturn": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "TotalReturn": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "TaxCredits": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "TotalIncome": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "IncomeNotYetPaid": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "IncomeCash": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "IncomeDRP": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "EndMarketValue": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "PercentCapitalReturn": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "GainOrLoss": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "Sales": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "Purchases": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "StartMarketValue": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "IncludedInPerformance": {
          "description": "",
          "type": "boolean"
        },
        "SecurityCurrency": {
          "description": "",
          "type": "string"
        },
        "Security": {
          "description": "",
          "$ref": "#/definitions/Security"
        },
        "NetOtherAmount": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "PercentIncomeReturn": {
          "description": "",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "CashAndEquivalent": {
      "properties": {
        "ForexMovements": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "Withdrawals": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "Deposits": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "Expenses": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "InternalTransfers": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "InterestReceipts": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "Income": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "Other": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "Purchases": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "OpeningBalance": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "IncludedInPerformance": {
          "description": "",
          "format": "int32",
          "type": "integer"
        },
        "SecurityCurrency": {
          "description": "",
          "type": "string"
        },
        "Security": {
          "description": "",
          "$ref": "#/definitions/Security"
        },
        "Sales": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "ClosingBalance": {
          "description": "",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "InvestmentMovement": {
      "properties": {
        "Investments": {
          "description": "",
          "items": {
            "$ref": "#/definitions/Investment"
          },
          "type": "array"
        },
        "CashAndEquivalents": {
          "description": "",
          "items": {
            "$ref": "#/definitions/CashAndEquivalent"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "DailyReturn": {
      "properties": {
        "Date": {
          "description": "",
          "format": "date-time",
          "type": "string"
        },
        "BeginningMarketValue": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "EndingMarketValue": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "NetContribution": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "NetInternalTransfers": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "TotalExpenses": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "TaxCredits": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "PercentageReturn": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "NetPercentReturn": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "CumulativePercentageReturn": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "CumulativeNetPercentReturn": {
          "description": "",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "Benchmark": {
      "properties": {
        "Id": {
          "description": "",
          "type": "string"
        },
        "Code": {
          "description": "",
          "type": "string"
        },
        "Name": {
          "description": "",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "BenchmarkReturn": {
      "properties": {
        "PeriodDescription": {
          "description": "",
          "type": "string"
        },
        "PercentageReturn": {
          "description": "",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "HoldingExcluded": {
      "properties": {
        "Security": {
          "description": "",
          "$ref": "#/definitions/Security"
        },
        "FromDate": {
          "description": "",
          "format": "date-time",
          "type": "string"
        },
        "ToDate": {
          "description": "",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "TargetApplication": {
      "format": "int32",
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3
      ]
    },
    "SsoLoginRequest": {
      "properties": {
        "Application": {
          "description": "The ID of the application the user will be sent to once logged in. Platform = 0, InvestorPortal = 1, AdviserPortal = 2, ApplicationPortal = 3.",
          "$ref": "#/definitions/TargetApplication"
        },
        "UserId": {
          "description": "The ID of the user to log in. Either UserId or Username is required.",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "Application",
        "UserId"
      ],
      "type": "object"
    },
    "SsoLoginResponse": {
      "properties": {
        "SsoUrl": {
          "description": "SSO URL.",
          "type": "string"
        }
      },
      "required": [],
      "type": "object"
    },
    "RealisedCgtAssetDisposal": {
      "properties": {
        "CgtGain": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "OtherGain": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "IndexedGain": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "DiscountedGain": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "OptimalCgtCalculationMethod": {
          "description": "",
          "type": "string"
        },
        "GrossGain": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "SaleProceeds": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "IndexedCost": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "CgtLoss": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "TaxFreeAmount": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "ActualCost": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "Quantity": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "SaleDate": {
          "description": "",
          "format": "date-time",
          "type": "string"
        },
        "PurchaseDate": {
          "description": "",
          "format": "date-time",
          "type": "string"
        },
        "TaxDate": {
          "description": "",
          "format": "date-time",
          "type": "string"
        },
        "Security": {
          "description": "",
          "$ref": "#/definitions/Security"
        },
        "AdjustedCost": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "PreCgtGainLoss": {
          "description": "",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "TaxFreeAndTaxDeferredAmount": {
      "properties": {
        "Security": {
          "description": "",
          "$ref": "#/definitions/Security"
        },
        "TaxDate": {
          "description": "",
          "format": "date-time",
          "type": "string"
        },
        "PurchaseDate": {
          "description": "",
          "format": "date-time",
          "type": "string"
        },
        "SaleDate": {
          "description": "",
          "format": "date-time",
          "type": "string"
        },
        "Quantity": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "ActualCost": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "TaxDeferred": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "TaxFree": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "AdjustedCost": {
          "description": "",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "TrustCgtDistribution": {
      "properties": {
        "Security": {
          "description": "",
          "$ref": "#/definitions/Security"
        },
        "TaxDate": {
          "description": "",
          "format": "date-time",
          "type": "string"
        },
        "GrossGain": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "DiscountedGain": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "IndexedGain": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "OtherGain": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "CgtGainLoss": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "PreCgtGainLoss": {
          "description": "",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "RealisedCgt": {
      "properties": {
        "CgtAssetDisposals": {
          "description": "",
          "items": {
            "$ref": "#/definitions/RealisedCgtAssetDisposal"
          },
          "type": "array"
        },
        "TaxFreeAndTaxDeferredAmounts": {
          "description": "",
          "items": {
            "$ref": "#/definitions/TaxFreeAndTaxDeferredAmount"
          },
          "type": "array"
        },
        "TrustCgtDistributions": {
          "description": "",
          "items": {
            "$ref": "#/definitions/TrustCgtDistribution"
          },
          "type": "array"
        }
      },
      "required": [],
      "type": "object"
    },
    "TaxSummary": {
      "properties": {
        "LossesCarriedForward": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "LossesCurrentYear": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "CgtDisposalsDiscounted": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "CgtDisposalsIndexed": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "CgtDisposalsOther": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "CgtDistributionsDiscounted": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "CgtDistributionsIndexed": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "CgtDistributionsOther": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "LossesAppliedDiscounted": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "LossesAppliedIndexed": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "LossesAppliedOther": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "DiscountApplied": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "NetCapitalGainLoss": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "NetCapitalGainLossDiscounted": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "NetCapitalGainLossIndexed": {
          "description": "",
          "format": "double",
          "type": "number"
        },
        "NetCapitalGainLossOther": {
          "description": "",
          "format": "double",
          "type": "number"
        }
      },
      "required": [],
      "type": "object"
    },
    "PdsModel": {
      "properties": {
        "Id": {
          "description": "ModelId as returned by the Models endpoint.",
          "type": "string"
        },
        "Name": {
          "description": "Model name.",
          "type": "string"
        },
        "Style": {
          "description": "Model style.",
          "type": "string"
        },
        "Code": {
          "description": "Model code.",
          "type": "string"
        },
        "ManagerName": {
          "description": "Model Manager name.",
          "type": "string"
        },
        "FeeOverride": {
          "description": "Fee override.",
          "$ref": "#/definitions/FeeOverride"
        }
      },
      "type": "object"
    },
    "PdsDetail": {
      "properties": {
        "Id": {
          "description": "ID of the PDS.",
          "type": "string"
        },
        "Name": {
          "description": "Name of the PDS.",
          "type": "string"
        },
        "MaxNoOfBankAccounts": {
          "description": "Maximum number of bank accounts allowed by the PDS.",
          "format": "int32",
          "type": "integer"
        },
        "IsSuperSma": {
          "description": "If the PDS is specific to SuperSMA.",
          "type": "boolean"
        },
        "Status": {
          "description": "Status of the PDS, active = 1, closed = 2.",
          "type": "string"
        },
        "ServiceId": {
          "description": "Service ID.",
          "type": "string"
        },
        "ServiceName": {
          "description": "Service Name.",
          "type": "string"
        },
        "Region": {
          "description": "Australia, UnitedKingdom or International.",
          "$ref": "#/definitions/ApplicantRegion"
        },
        "CurrencyCode": {
          "description": "Currency code for the PDS.",
          "type": "string"
        },
        "Fees": {
          "description": "Fees associated to the PDS.",
          "items": {
            "$ref": "#/definitions/PdsFee"
          },
          "type": "array"
        },
        "BankAccountUsages": {
          "description": "This allows you to define a regular cash addition or withdrawal from the SMA or SuperSMA.",
          "items": {
            "$ref": "#/definitions/BankAccountUsage"
          },
          "type": "array"
        },
        "TaxOptions": {
          "description": "Tax options for the PDS.",
          "items": {
            "$ref": "#/definitions/PdsTaxOption"
          },
          "type": "array"
        },
        "Models": {
          "description": "List of available models.",
          "items": {
            "$ref": "#/definitions/PdsModel"
          },
          "type": "array"
        },
        "AvailableAccountTypes": {
          "description": "Standard = 0, OffshoreBond = 10, Sipp = 11, Qrops = 12, RtsRats = 13, Pra = 14, Isa = 15, Gia = 16, Pera = 17, PersonalPension = 18, GroupSipp = 19, Jisa = 26, OnshoreBond = 27, OffshoreBondPersonalised = 28.",
          "items": {
            "$ref": "#/definitions/AccountType"
          },
          "type": "array"
        },
        "Products": {
          "description": "Products for the PDS.",
          "items": {
            "$ref": "#/definitions/Product"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "TokenResponse": {
      "properties": {
        "token_type": {
          "description": "Token type is always Bearer.",
          "type": "string"
        },
        "expires_in": {
          "description": "After how many seconds an access token will expire.",
          "format": "int32",
          "type": "integer"
        },
        "ext_expires_in": {
          "description": "Extended lifetime of access token if value of this field is greater than value of expires_in.",
          "format": "int32",
          "type": "integer"
        },
        "access_token": {
          "description": "Access token that can be used to access public API endpoints.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PutAccountModelWeightingRequest": {
      "properties": {
        "AccountId": {
          "description": "Account ID.",
          "type": "string"
        },
        "RebalanceType": {
          "description": "Floating = 0, Fixed = 1.",
          "$ref": "#/definitions/RebalanceType"
        },
        "AccountModelWeightings": {
          "description": "Account Model Weightings.",
          "minLength": 1,
          "items": {
            "$ref": "#/definitions/AccountModelWeighting"
          },
          "type": "array"
        }
      },
      "required": [
        "AccountId",
        "AccountModelWeightings",
        "RebalanceType"
      ],
      "type": "object"
    },
    "Account": {
      "properties": {
        "Id": {
          "description": "Account ID.",
          "type": "string"
        },
        "Code": {
          "description": "Account code.",
          "type": "string"
        },
        "Name": {
          "description": "Account name.",
          "type": "string"
        },
        "ValuationDate": {
          "description": "Account valuation date or asat date.",
          "format": "date-time",
          "type": "string"
        },
        "ConsolidationType": {
          "description": "None = 78, Portfolio = 80, Transaction = 84, FeeGroup = 85, ShareTrader = 86, SuperFund = 87.",
          "type": "enum"
        },
        "AccountType": {
          "description": "Standard = 0, Sma = 1, Smsf = 3, SuperSmaAccumulation = 4, SuperSmaPension = 5.",
          "type": "enum"
        },
        "EntityType": {
          "description": "Individual = 0, Trust = 1, Corporate = 2, Partnership = 3, Superfund = 4, Joint = 5.",
          "type": "enum"
        },
        "Status": {
          "description": "Active = 0, Draft = 1, Closed = 2, Deleted = 3.",
          "type": "enum"
        },
        "RecalcType": {
          "description": "None = 0, Manual = 1, Auto = 2.",
          "type": "enum"
        },
        "RecalcStatus": {
          "description": "OK = 0, Error = 1.",
          "type": "enum"
        }
      },
      "type": "object"
    },
    "AccountIEnumerablePagedResponse": {
      "properties": {
        "Data": {
          "description": "",
          "items": {
            "$ref": "#/definitions/Account"
          },
          "type": "array"
        },
        "Metadata": {
          "description": "",
          "$ref": "#/definitions/Metadata"
        }
      },
      "type": "object"
    },
    "DraftAddress": {
      "properties": {
        "Addressee": {
          "description": "Addressee.",
          "type": "string"
        },
        "Street": {
          "description": "Address line 1.",
          "type": "string"
        },
        "Line2": {
          "description": "Address line 2.",
          "type": "string"
        },
        "Line3": {
          "description": "Address line 3.",
          "type": "string"
        },
        "Postcode": {
          "description": "Postcode of address.",
          "type": "string"
        },
        "Suburb": {
          "description": "Suburb of address.",
          "type": "string"
        },
        "CountryCode": {
          "description": "Country code of address.",
          "type": "string"
        },
        "IsRegistered": {
          "description": "Whether address is registered.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "DraftContact": {
      "properties": {
        "Title": {
          "description": "Title of contact.",
          "type": "string"
        },
        "FirstName": {
          "description": "First name of contact.",
          "type": "string"
        },
        "LastName": {
          "description": "Last name of contact.",
          "type": "string"
        },
        "DateOfBirth": {
          "description": "Date of birth of contact.",
          "format": "date-time",
          "type": "string"
        },
        "Email": {
          "description": "Email of contact.",
          "type": "string"
        },
        "Phone": {
          "description": "Phone Number of contact.",
          "type": "string"
        },
        "PhoneOther": {
          "description": "Secondary contact number of contact.",
          "type": "string"
        },
        "NationalIdentifier": {
          "description": "National identifier.",
          "$ref": "#/definitions/DraftNationalIdentifier"
        },
        "ReceiveCommunicationByPost": {
          "description": "If you would like to opt out of electronic communications.",
          "type": "boolean"
        },
        "IsPoliticallyExposedPerson": {
          "description": "Whether applicant is politically exposed.",
          "type": "boolean"
        },
        "PepDetails": {
          "description": "If applicant is politically exposed, details must be supplied.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DraftSignatory": {
      "properties": {
        "Capacity": {
          "description": "Director = 0, SoleDirector = 1, CompanySecretary = 2, Partner = 3, Trustee = 4, SignedUnderSeal = 5, SignificantShareholder = 6, Beneficiary = 7.",
          "$ref": "#/definitions/CorporateCapacity"
        },
        "TaxNumber": {
          "description": "Tax number of signatory.",
          "type": "string"
        },
        "CountryOfBirth": {
          "description": "Country of birth of signatory.",
          "type": "string"
        },
        "Address": {
          "description": "Address of signatory.",
          "$ref": "#/definitions/DraftAddress"
        },
        "Title": {
          "description": "Title of signatory.",
          "type": "string"
        },
        "FirstName": {
          "description": "First name of signatory.",
          "type": "string"
        },
        "LastName": {
          "description": "Last name of signatory.",
          "type": "string"
        },
        "DateOfBirth": {
          "description": "Date of birth of signatory.",
          "format": "date-time",
          "type": "string"
        },
        "Email": {
          "description": "Email address of signatory.",
          "type": "string"
        },
        "Phone": {
          "description": "Phone number of signatory.",
          "type": "string"
        },
        "PhoneOther": {
          "description": "Secondary contact number of signatory.",
          "type": "string"
        },
        "NationalIdentifier": {
          "description": "Signatory's national identifier.",
          "$ref": "#/definitions/DraftNationalIdentifier"
        },
        "ReceiveCommunicationByPost": {
          "description": "If you would like to opt out of electronic communications.",
          "type": "boolean"
        },
        "IsPoliticallyExposedPerson": {
          "description": "Whether applicant is politically exposed.",
          "type": "boolean"
        },
        "PepDetails": {
          "description": "If applicant is politically exposed, details must be supplied.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DraftCorporateApplicant": {
      "properties": {
        "Name": {
          "description": "Name of the corporate applicant.",
          "type": "string"
        },
        "TradingName": {
          "description": "Trading name of the corporate applicant.",
          "type": "string"
        },
        "Identifications": {
          "description": "Array of TFN / TIN / ABN / NIN.",
          "items": {
            "$ref": "#/definitions/DraftApplicantIdentification"
          },
          "type": "array"
        },
        "BusinessAddress": {
          "description": "Business address.",
          "$ref": "#/definitions/DraftAddress"
        },
        "MailingAddress": {
          "description": "Mailing address.",
          "$ref": "#/definitions/DraftAddress"
        },
        "ContactIsSignatory": {
          "description": "Whether the contact is a signatory on the account.",
          "type": "boolean"
        },
        "ContactIsDirectorOrSignificantShareholder": {
          "description": "Whether the contact is a director or significant shareholder on the account.",
          "type": "boolean"
        },
        "Contact": {
          "description": "Primary contact.",
          "$ref": "#/definitions/DraftContact"
        },
        "Signatories": {
          "description": "Corporate signatories.",
          "items": {
            "$ref": "#/definitions/DraftSignatory"
          },
          "type": "array"
        },
        "CompanyRegistrationNumber": {
          "description": "Register number of the company.",
          "type": "string"
        },
        "TaxId": {
          "description": "Tax identity of the company.",
          "type": "string"
        },
        "Lei": {
          "description": "LEI of the Company.",
          "type": "string"
        },
        "CountryOfIncorporation": {
          "description": "Country of incorporation of the company.",
          "type": "string"
        },
        "DateOfIncorporation": {
          "description": "Date of incorporation of the company.",
          "format": "date-time",
          "type": "string"
        },
        "NatureOfActivities": {
          "description": "Nature of activities that the company performs.",
          "type": "string"
        },
        "BearerSharesAreInIssue": {
          "description": "Bearer shares are in issue.",
          "type": "boolean"
        },
        "NameOfRegulator": {
          "description": "Name of regulator.",
          "type": "string"
        },
        "RegulatorReferenceNumber": {
          "description": "Regulator reference number.",
          "type": "string"
        },
        "CompanyType": {
          "description": "Plc = 0, Ltd = 1, Llp = 2, Partnership = 3.",
          "$ref": "#/definitions/CompanyType"
        }
      },
      "type": "object"
    },
    "DraftIndividualApplicant": {
      "properties": {
        "Identifications": {
          "description": "Tfn = 0, Abn = 1, Tin = 2, Nin = 3.",
          "items": {
            "$ref": "#/definitions/DraftApplicantIdentification"
          },
          "type": "array"
        },
        "TaxResidenceCountryCode": {
          "description": "Tax residence country code.",
          "type": "string"
        },
        "CitizenshipCountryCode": {
          "description": "Citizenship country code.",
          "type": "string"
        },
        "BirthCountryCode": {
          "description": "Birth country code.",
          "type": "string"
        },
        "HomeAddress": {
          "description": "Home address of individual applicant.",
          "$ref": "#/definitions/DraftAddress"
        },
        "MailingAddress": {
          "description": "Mailing address of individual applicant.",
          "$ref": "#/definitions/DraftAddress"
        },
        "Gender": {
          "description": "Male = 1, Female = 2.",
          "$ref": "#/definitions/Gender"
        },
        "UserName": {
          "description": "User Name of individual applicant.",
          "type": "string"
        },
        "UserId": {
          "description": "User ID of individual applicant.",
          "type": "string"
        },
        "TaxResidences": {
          "description": "Applicant's tax residence.",
          "items": {
            "$ref": "#/definitions/DraftApplicantTaxResidence"
          },
          "type": "array"
        },
        "UsPerson": {
          "description": "Select if applicant is from the US.",
          "type": "boolean"
        },
        "SourceOfWealth": {
          "description": "Provide the applicant's source of wealth.",
          "type": "string"
        },
        "Profession": {
          "description": "Provide the applicant's profession.",
          "type": "string"
        },
        "TaxFileNumber": {
          "description": "Tax File Number of the applicant.",
          "type": "string"
        },
        "Title": {
          "description": "Title: Mr, Mrs, Ms, Miss, Doctor, Lady, Prof and Sir.",
          "type": "string"
        },
        "FirstName": {
          "description": "First name of individual.",
          "type": "string"
        },
        "LastName": {
          "description": "Last name of individual.",
          "type": "string"
        },
        "DateOfBirth": {
          "description": "Date of birth of the individual.",
          "format": "date-time",
          "type": "string"
        },
        "Email": {
          "description": "Email address of the individual.",
          "type": "string"
        },
        "Phone": {
          "description": "Primary contact number of the individual.",
          "type": "string"
        },
        "PhoneOther": {
          "description": "Other phone of the individual.",
          "type": "string"
        },
        "NationalIdentifier": {
          "description": "Individual's national identifier.",
          "$ref": "#/definitions/DraftNationalIdentifier"
        },
        "ReceiveCommunicationByPost": {
          "description": "If you would like to opt out of electronic communications.",
          "type": "boolean"
        },
        "IsPoliticallyExposedPerson": {
          "description": "Whether applicant is politically exposed.",
          "type": "boolean"
        },
        "PepDetails": {
          "description": "If applicant is politically exposed, details must be supplied.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DraftDirector": {
      "properties": {
        "TaxNumber": {
          "description": "Tax number of signatory.",
          "type": "string"
        },
        "CountryOfBirth": {
          "description": "Country of birth of signatory.",
          "type": "string"
        },
        "Address": {
          "description": "Address of signatory.",
          "$ref": "#/definitions/DraftAddress"
        },
        "NationalIdentifier": {
          "description": "Signatory's national identifier.",
          "$ref": "#/definitions/DraftNationalIdentifier"
        },
        "ReceiveCommunicationByPost": {
          "description": "If you would like to opt out of electronic communications.",
          "type": "boolean"
        },
        "Title": {
          "description": "Title of signatory.",
          "type": "string"
        },
        "FirstName": {
          "description": "First name of signatory.",
          "type": "string"
        },
        "LastName": {
          "description": "Last name of signatory.",
          "type": "string"
        },
        "DateOfBirth": {
          "description": "Date of birth of signatory.",
          "format": "date-time",
          "type": "string"
        },
        "Email": {
          "description": "Email address of signatory.",
          "type": "string"
        },
        "Phone": {
          "description": "Phone number of signatory.",
          "type": "string"
        },
        "PhoneOther": {
          "description": "Secondary contact number of signatory.",
          "type": "string"
        },
        "IsPoliticallyExposedPerson": {
          "description": "Whether applicant is politically exposed.",
          "type": "boolean"
        }
      },
      "required": [
        "FirstName",
        "LastName"
      ],
      "type": "object"
    },
    "DraftCorporateTrustee": {
      "properties": {
        "BusinessAddress": {
          "description": "Business address.",
          "$ref": "#/definitions/DraftAddress"
        },
        "MailingAddress": {
          "description": "Mailing address.",
          "$ref": "#/definitions/DraftAddress"
        },
        "CompanyRegistrationNumber": {
          "description": "Register number of the company.",
          "type": "string"
        },
        "TaxId": {
          "description": "Tax identity of the company.",
          "type": "string"
        },
        "Lei": {
          "description": "LEI of the Company.",
          "type": "string"
        },
        "NameOfRegulator": {
          "description": "Name of regulator.",
          "type": "string"
        },
        "RegulatorReferenceNumber": {
          "description": "Regulator reference number.",
          "type": "string"
        },
        "Director": {
          "description": "Director of the corporate trustee.",
          "$ref": "#/definitions/DraftDirector"
        },
        "CompanyType": {
          "description": "Plc = 0, Ltd = 1, Llp = 2, Partnership = 3.",
          "$ref": "#/definitions/CompanyType"
        },
        "Name": {
          "description": "Name of the corporate trustee.",
          "type": "string"
        },
        "TradingName": {
          "description": "Trading name of the corporate trustee.",
          "type": "string"
        }
      },
      "required": [
        "Name"
      ],
      "type": "object"
    },
    "DraftTrustApplicant": {
      "properties": {
        "TrustName": {
          "description": "Name of the trust.",
          "type": "string"
        },
        "NatureOfTrust": {
          "description": "Nature of the trust. Bare = 0, Charitable = 1, Will = 2, Interest in possession = 3, Discretionary = 4, Accumulation = 5, Settlor interested = 6, Granted = 7, Single Person Pension = 8, Multiple Member Personal Pension = 9, Single Member SSAS = 10, Multiple Member SSAS = 11, Loan = 12.",
          "$ref": "#/definitions/TrustNature"
        },
        "Lei": {
          "description": "LEI of trust.",
          "type": "string"
        },
        "DateOfEstablishment": {
          "description": "Date trust was established.",
          "format": "date-time",
          "type": "string"
        },
        "TaxDomicile": {
          "description": "Tax domicile of trust.",
          "type": "string"
        },
        "BeneficiariesHaveVestedRights": {
          "description": "If beneficiaries have vested rights.",
          "type": "boolean"
        },
        "Address": {
          "description": "Address of Trust.",
          "$ref": "#/definitions/DraftAddress"
        },
        "Signatories": {
          "description": "Signatories of the trust.",
          "items": {
            "$ref": "#/definitions/DraftSignatory"
          },
          "type": "array"
        },
        "CorporateTrustees": {
          "description": "Corporate trustees of the trust.",
          "items": {
            "$ref": "#/definitions/DraftCorporateTrustee"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "DraftApplicant": {
      "properties": {
        "OwnerAdviserId": {
          "description": "Owner adviser ID to create the application under.",
          "format": "int32",
          "type": "integer"
        },
        "ApplicantType": {
          "description": "Individual = 0, Corporate = 1, Trust (UK only) = 2.",
          "$ref": "#/definitions/ApplicantType"
        },
        "CorporateDetails": {
          "description": "Used for Corporate applicants.",
          "$ref": "#/definitions/DraftCorporateApplicant"
        },
        "IndividualDetails": {
          "description": "Used for Individual applicants.",
          "$ref": "#/definitions/DraftIndividualApplicant"
        },
        "TrustDetails": {
          "description": "Used for Trust applicants.",
          "$ref": "#/definitions/DraftTrustApplicant"
        }
      },
      "type": "object"
    },
    "DraftFee": {
      "properties": {
        "Id": {
          "description": "Fee ID.",
          "type": "string"
        },
        "Rate": {
          "description": "Fee rate.",
          "format": "double",
          "type": "number"
        },
        "Unit": {
          "description": "Fee unit, dollars or percentage.",
          "type": "string"
        },
        "Type": {
          "description": "Fee type.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DraftAccountBankAccount": {
      "properties": {
        "Bsb": {
          "description": "Bank account BSB. (AU only)",
          "type": "string"
        },
        "SortCode": {
          "description": "Bank account sort code. (UK only)",
          "type": "string"
        },
        "AccountNumber": {
          "description": "Bank account number.",
          "type": "string"
        },
        "AccountName": {
          "description": "Bank account name.",
          "type": "string"
        },
        "Usages": {
          "description": "This allows you to define a regular cash addition or withdrawal from the SMA or SuperSMA. (AU only)",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "Bic": {
          "description": "Bank identifier code (BIC) of your banking institution. (UK only)",
          "type": "string"
        },
        "Iban": {
          "description": "International bank account number (IBAN) of your banking institution. (UK only)",
          "type": "string"
        },
        "RoutingNumber": {
          "description": "Routing number of banking institution. (UK only)",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DraftAccount": {
      "properties": {
        "Name": {
          "description": "Account name.",
          "type": "string"
        },
        "RegisteredName": {
          "description": "Account registered name.",
          "type": "string"
        },
        "ShortName": {
          "description": "Account short name.",
          "type": "string"
        },
        "AccountType": {
          "description": "AU account types: Company = 13, Individual = 14, Trust = 15, SuperSmaAccumulation = 16, SuperSmaPensionAbp = 17, SuperSmaPensionTtr = 18 <br /> UK account types: Isa = 0, Gia = 1, OffshoreBond = 2, Qrops = 3, Rats = 4, Sipp = 5, PraemiumRetirementAccount = 6, Pera = 7, PersonalPension = 8, GroupSipp = 9, Ssas = 10, Jisa = 11, OnshoreBond = 12.",
          "$ref": "#/definitions/DraftAccountType"
        },
        "PdsId": {
          "description": "PDS ID of account.",
          "type": "string"
        },
        "Fees": {
          "description": "Account fees.",
          "items": {
            "$ref": "#/definitions/DraftFee"
          },
          "type": "array"
        },
        "Models": {
          "description": "Account models.",
          "items": {
            "$ref": "#/definitions/DraftModel"
          },
          "type": "array"
        },
        "BankAccounts": {
          "description": "Bank accounts.",
          "items": {
            "$ref": "#/definitions/DraftAccountBankAccount"
          },
          "type": "array"
        },
        "Exclusions": {
          "description": "Account exclusions.",
          "items": {
            "$ref": "#/definitions/DraftExclusion"
          },
          "type": "array"
        },
        "InitialInvestment": {
          "description": "Initial investment of account.",
          "$ref": "#/definitions/DraftInitialInvestment"
        },
        "PensionPayment": {
          "description": "Pension Payment.",
          "$ref": "#/definitions/DraftPensionPayment"
        },
        "TargetAllocation": {
          "description": "Target allocation.",
          "$ref": "#/definitions/DraftTargetAllocation"
        },
        "InitialInvestmentSuper": {
          "description": "Initial investment for super.",
          "$ref": "#/definitions/DraftInitialInvestmentSuper"
        },
        "ReversionaryBeneficiary": {
          "description": "Reversionary beneficiary.",
          "$ref": "#/definitions/NominatedReversionaryBeneficiary"
        },
        "Beneficiaries": {
          "description": "Beneficiaries.",
          "items": {
            "$ref": "#/definitions/DraftNominatedBeneficiary"
          },
          "type": "array"
        },
        "IsBindingNomination": {
          "description": "If nomination is binding.",
          "type": "boolean"
        },
        "IsEmployerContributing": {
          "description": "If employer is contributing.",
          "type": "boolean"
        },
        "SourceOfFunds": {
          "description": "Contribution source.",
          "type": "string"
        },
        "OngoingFeeAmount": {
          "description": "Ongoing fee amount.",
          "format": "double",
          "type": "number"
        },
        "ReinvestIncome": {
          "description": "Reinvest income.",
          "type": "boolean"
        },
        "ProductId": {
          "description": "Product ID.",
          "type": "string"
        },
        "ProductProviderReference": {
          "description": "Product provider reference.",
          "type": "string"
        },
        "RegularContribution": {
          "description": "Regular cash contributions to the account.",
          "$ref": "#/definitions/DraftRegularTransaction"
        },
        "RegularWithdrawal": {
          "description": "Regular cash withdrawals from the account.",
          "$ref": "#/definitions/DraftRegularTransaction"
        },
        "OwnerAdviserId": {
          "description": "Owner adviser ID to create the application under.",
          "format": "int32",
          "type": "integer"
        },
        "Region": {
          "description": "Australia = 0, International = 1, UnitedKingdom = 2.",
          "$ref": "#/definitions/Region"
        },
        "CurrencyCode": {
          "description": "The currency code of the account.",
          "type": "string"
        },
        "AdviserReference": {
          "description": "Adviser reference..",
          "type": "string"
        },
        "InSpecieCashStockTransfers": {
          "description": "In specie cash stock transfers.",
          "items": {
            "$ref": "#/definitions/DraftInSpecieCashStockTransfer"
          },
          "type": "array"
        },
        "IsTradeFreezeOn": {
          "description": "If a trade freeze is on.",
          "type": "boolean"
        },
        "TradeFreezeReason": {
          "description": "TransferIn = 0, TransferOut = 1, Incident = 2, Deceased = 3, RemovalOfAdviser = 4, AdviserInstructed = 5, Bespoke = 6.",
          "$ref": "#/definitions/TradeFreezeReason"
        },
        "TradeFreezeNote": {
          "description": "Trade freeze note.",
          "type": "string"
        },
        "IllustrationData": {
          "description": "Illustration data.",
          "$ref": "#/definitions/DraftIllustrationData"
        }
      },
      "required": [
        "AccountType"
      ],
      "type": "object"
    },
    "DraftApplication": {
      "properties": {
        "AdviserId": {
          "description": "Adviser ID to create the application under.",
          "format": "int32",
          "type": "integer"
        },
        "OwnerAdviserId": {
          "description": "Owner adviser ID to create the application under.",
          "format": "int32",
          "type": "integer"
        },
        "Applicants": {
          "description": "Objects containing the applicant data. There must be at least one applicant for the request to succeed. The array of objects may contain a mix of Individual and Corporate applicants.",
          "minLength": 1,
          "items": {
            "$ref": "#/definitions/DraftApplicant"
          },
          "type": "array"
        },
        "Accounts": {
          "description": "Array of accounts to be opened with the application. Must be linked to an included applicant.",
          "items": {
            "$ref": "#/definitions/DraftAccount"
          },
          "type": "array"
        }
      },
      "required": [
        "AdviserId",
        "Applicants"
      ],
      "type": "object"
    }
  },
  "swagger": "2.0",
  "info": {
    "version": "2021.03.21",
    "title": "Public API"
  }
}